
package views.manager;

import com.mysql.cj.jdbc.Blob;
import entity.Person;
import entity.Position;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.io.File;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Objects;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import util.DatabaseManager;
import util.ImageManager;
import util.StateManager;
import util.ValidationManager;


public class PanelManageAccount extends javax.swing.JPanel {

    private StateManager panelState;

    private ArrayList<Person> users;
    private ArrayList<Position> positions;
    private int displayLimit = 500;
    private Blob fieldImage = null;
    private DefaultTableModel dtm;

    private Person currentEditUser;
    
    public PanelManageAccount(StateManager panelState) {
        this.panelState = panelState;
        
        initComponents();
        loadComboBoxes();
              
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelEditFields = new javax.swing.JPanel();
        labelNotification = new javax.swing.JLabel();
        scrollPane = new javax.swing.JScrollPane();
        panelForm = new javax.swing.JPanel();
        sectionOnePanel = new javax.swing.JPanel();
        comboPositionEdit = new javax.swing.JComboBox<>();
        fieldUsername = new javax.swing.JTextField();
        panelReq = new javax.swing.JPanel();
        labelUserReq = new javax.swing.JLabel();
        labelReqOne = new javax.swing.JLabel();
        labelReqTwo = new javax.swing.JLabel();
        labelReqThree = new javax.swing.JLabel();
        progressLogonID = new javax.swing.JProgressBar();
        sectionThreePanel = new javax.swing.JPanel();
        labelStepTwo = new javax.swing.JLabel();
        fieldTitle = new javax.swing.JTextField();
        fieldFirstName = new javax.swing.JTextField();
        fieldMiddleName = new javax.swing.JTextField();
        fieldLastName = new javax.swing.JTextField();
        comboSuffix = new javax.swing.JComboBox<>();
        fieldPrimaryPhone = new javax.swing.JTextField();
        fieldSecondaryPhone = new javax.swing.JTextField();
        fieldEmail = new javax.swing.JTextField();
        sectionFourPanel = new javax.swing.JPanel();
        labelStepFour = new javax.swing.JLabel();
        fieldAdrOne = new javax.swing.JTextField();
        fieldAdrTwo = new javax.swing.JTextField();
        fieldAdrThree = new javax.swing.JTextField();
        fieldCity = new javax.swing.JTextField();
        comboState = new javax.swing.JComboBox<>();
        fieldZipcode = new javax.swing.JTextField();
        sectionFivePanel = new javax.swing.JPanel();
        labelItemImage = new javax.swing.JLabel();
        btnRedo = new javax.swing.JButton();
        btnChangeImage = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        panelEditFields.setLayout(new java.awt.GridBagLayout());

        labelNotification.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelNotification.setText("Your Account");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelEditFields.add(labelNotification, gridBagConstraints);

        scrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelForm.setMinimumSize(new java.awt.Dimension(100, 106));
        panelForm.setLayout(new java.awt.GridBagLayout());

        sectionOnePanel.setLayout(new java.awt.GridBagLayout());

        comboPositionEdit.setBorder(javax.swing.BorderFactory.createTitledBorder("Position"));
        comboPositionEdit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPositionEditItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        sectionOnePanel.add(comboPositionEdit, gridBagConstraints);

        fieldUsername.setBorder(javax.swing.BorderFactory.createTitledBorder("Username *"));
        fieldUsername.setName("usernameField"); // NOI18N
        fieldUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                validateForm();
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        sectionOnePanel.add(fieldUsername, gridBagConstraints);

        panelReq.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelReq.setLayout(new java.awt.GridBagLayout());

        labelUserReq.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelUserReq.setText("Username Requirements:");
        labelUserReq.setName("titleOne"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 25);
        panelReq.add(labelUserReq, gridBagConstraints);

        labelReqOne.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        labelReqOne.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelReqOne.setForeground(new java.awt.Color(0, 0, 0));
        labelReqOne.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelReqOne.setText("Doesn't start with number");
        labelReqOne.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 25);
        panelReq.add(labelReqOne, gridBagConstraints);

        labelReqTwo.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        labelReqTwo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelReqTwo.setForeground(new java.awt.Color(0, 0, 0));
        labelReqTwo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelReqTwo.setText("No special/empty characters");
        labelReqTwo.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 25);
        panelReq.add(labelReqTwo, gridBagConstraints);

        labelReqThree.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        labelReqThree.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelReqThree.setForeground(new java.awt.Color(0, 0, 0));
        labelReqThree.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelReqThree.setText("Length between 8-20");
        labelReqThree.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 25);
        panelReq.add(labelReqThree, gridBagConstraints);

        progressLogonID.setForeground(new java.awt.Color(0, 153, 153));
        progressLogonID.setMaximum(3);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.ipady = 21;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 30);
        panelReq.add(progressLogonID, gridBagConstraints);
        progressLogonID.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                if (progressLogonID.getValue() == progressLogonID.getMaximum()) {
                }}
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionOnePanel.add(panelReq, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            panelForm.add(sectionOnePanel, gridBagConstraints);

            sectionThreePanel.setLayout(new java.awt.GridBagLayout());

            labelStepTwo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
            labelStepTwo.setText("Contact Information");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 5;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionThreePanel.add(labelStepTwo, gridBagConstraints);

            fieldTitle.setToolTipText("- Must start with A-Z\n- Can contain a-z\n- Must end with '.'\nExamples: \"Mr.\", \"Miss.\", \"Sir.\"");
            fieldTitle.setBorder(javax.swing.BorderFactory.createTitledBorder("Title (Optional)"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionThreePanel.add(fieldTitle, gridBagConstraints);
            fieldTitle.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    validateForm();
                }
                public void keyTyped(java.awt.event.KeyEvent evt) {
                }
            });

            fieldFirstName.setBorder(javax.swing.BorderFactory.createTitledBorder("First Name *"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionThreePanel.add(fieldFirstName, gridBagConstraints);
            fieldFirstName.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    validateForm();
                }
                public void keyTyped(java.awt.event.KeyEvent evt) {
                }
            });

            fieldMiddleName.setBorder(javax.swing.BorderFactory.createTitledBorder("Middle Name (Optional)"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionThreePanel.add(fieldMiddleName, gridBagConstraints);
            fieldMiddleName.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    validateForm();
                }
                public void keyTyped(java.awt.event.KeyEvent evt) {
                }
            });

            fieldLastName.setBorder(javax.swing.BorderFactory.createTitledBorder("Last Name *"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionThreePanel.add(fieldLastName, gridBagConstraints);
            fieldLastName.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    validateForm();
                }
                public void keyTyped(java.awt.event.KeyEvent evt) {
                }
            });

            comboSuffix.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Jr.", "Sr.", "I", "II", "III", "IV", "V" }));
            comboSuffix.setBorder(javax.swing.BorderFactory.createTitledBorder("Suffix (Optional)"));
            comboSuffix.addItemListener(new java.awt.event.ItemListener() {
                public void itemStateChanged(java.awt.event.ItemEvent evt) {
                    comboSuffixItemStateChanged(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionThreePanel.add(comboSuffix, gridBagConstraints);

            fieldPrimaryPhone.setToolTipText("Example: \"512-129-2930\"");
            fieldPrimaryPhone.setBorder(javax.swing.BorderFactory.createTitledBorder("Primary Phone (Optional)"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionThreePanel.add(fieldPrimaryPhone, gridBagConstraints);
            fieldPrimaryPhone.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    validateForm();
                }
                public void keyTyped(java.awt.event.KeyEvent evt) {
                }
            });

            fieldSecondaryPhone.setToolTipText("Example: \"512-129-2930\"");
            fieldSecondaryPhone.setBorder(javax.swing.BorderFactory.createTitledBorder("Secondary Phone (Optional)"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionThreePanel.add(fieldSecondaryPhone, gridBagConstraints);
            fieldSecondaryPhone.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    validateForm();
                }
                public void keyTyped(java.awt.event.KeyEvent evt) {
                }
            });

            fieldEmail.setToolTipText("Example: mail@mail.com");
            fieldEmail.setBorder(javax.swing.BorderFactory.createTitledBorder("Email (Optional)"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionThreePanel.add(fieldEmail, gridBagConstraints);
            fieldEmail.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    validateForm();
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            panelForm.add(sectionThreePanel, gridBagConstraints);

            sectionFourPanel.setLayout(new java.awt.GridBagLayout());

            labelStepFour.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
            labelStepFour.setText("Shipping Information");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionFourPanel.add(labelStepFour, gridBagConstraints);

            fieldAdrOne.setToolTipText("(Your Name), (Company Name), (Dep. Name, Company Name)");
            fieldAdrOne.setBorder(javax.swing.BorderFactory.createTitledBorder("Address Title *"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionFourPanel.add(fieldAdrOne, gridBagConstraints);
            fieldAdrOne.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    validateForm();
                }
                public void keyTyped(java.awt.event.KeyEvent evt) {
                }
            });

            fieldAdrTwo.setToolTipText("Box 12345");
            fieldAdrTwo.setBorder(javax.swing.BorderFactory.createTitledBorder("PO Box (Optional)"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionFourPanel.add(fieldAdrTwo, gridBagConstraints);
            fieldAdrTwo.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    validateForm();
                }
            });

            fieldAdrThree.setToolTipText("123 Big Building Drive");
            fieldAdrThree.setBorder(javax.swing.BorderFactory.createTitledBorder("Delivery Adr. (Optional)"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionFourPanel.add(fieldAdrThree, gridBagConstraints);
            fieldAdrThree.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    validateForm();
                }
            });

            fieldCity.setBorder(javax.swing.BorderFactory.createTitledBorder("City *"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionFourPanel.add(fieldCity, gridBagConstraints);
            fieldCity.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    validateForm();
                }
                public void keyTyped(java.awt.event.KeyEvent evt) {
                }
            });

            comboState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY", "AE", "AP", "AA" }));
            comboState.setToolTipText("");
            comboState.setBorder(javax.swing.BorderFactory.createTitledBorder("State *"));
            comboState.addItemListener(new java.awt.event.ItemListener() {
                public void itemStateChanged(java.awt.event.ItemEvent evt) {
                    comboStateItemStateChanged(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionFourPanel.add(comboState, gridBagConstraints);

            fieldZipcode.setBorder(javax.swing.BorderFactory.createTitledBorder("Zip Code *"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            sectionFourPanel.add(fieldZipcode, gridBagConstraints);
            fieldZipcode.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    validateForm();
                }
                public void keyTyped(java.awt.event.KeyEvent evt) {
                }
            });

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            panelForm.add(sectionFourPanel, gridBagConstraints);

            sectionFivePanel.setLayout(new java.awt.GridBagLayout());

            labelItemImage.setText("Image");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.gridheight = 5;
            gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
            sectionFivePanel.add(labelItemImage, gridBagConstraints);

            btnRedo.setBackground(new java.awt.Color(204, 102, 0));
            btnRedo.setText("Undo");
            btnRedo.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnRedoActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 5);
            sectionFivePanel.add(btnRedo, gridBagConstraints);

            btnChangeImage.setBackground(new java.awt.Color(0, 153, 153));
            btnChangeImage.setText("️📝");
            btnChangeImage.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnChangeImageActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 5;
            gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 25);
            sectionFivePanel.add(btnChangeImage, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.weighty = 0.1;
            panelForm.add(sectionFivePanel, gridBagConstraints);

            scrollPane.setViewportView(panelForm);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.weightx = 1.0;
            gridBagConstraints.weighty = 1.0;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
            panelEditFields.add(scrollPane, gridBagConstraints);
            scrollPane.getVerticalScrollBar().setUnitIncrement(16);

            btnUpdate.setBackground(new java.awt.Color(0, 153, 153));
            btnUpdate.setText("Update");
            btnUpdate.setName("Update"); // NOI18N
            btnUpdate.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnUpdateActionPerformed(evt);
                }
            });
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.ipadx = 30;
            gridBagConstraints.ipady = 15;
            gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
            panelEditFields.add(btnUpdate, gridBagConstraints);

            add(panelEditFields, java.awt.BorderLayout.CENTER);
        }// </editor-fold>//GEN-END:initComponents

    private void comboPositionEditItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPositionEditItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            validateForm();
        }
    }//GEN-LAST:event_comboPositionEditItemStateChanged

    private void comboSuffixItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboSuffixItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            validateForm();
        }
    }//GEN-LAST:event_comboSuffixItemStateChanged

    private void comboStateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboStateItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            validateForm();
        }
    }//GEN-LAST:event_comboStateItemStateChanged

    private void btnRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedoActionPerformed
        // TODO add your handling code here:
        labelItemImage.setIcon(currentEditUser.getImageIcon(ImageManager.SIZE_PREVIEW));
        fieldImage = null;
        validateForm();
    }//GEN-LAST:event_btnRedoActionPerformed

    private void btnChangeImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeImageActionPerformed
        // TODO add your handling code here:
        uploadImage();
    }//GEN-LAST:event_btnChangeImageActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        currentEditUser.setNameFirst(fieldFirstName.getText());
        currentEditUser.setNameMiddle(fieldMiddleName.getText().isEmpty() ? null : fieldMiddleName.getText());
        currentEditUser.setNameLast(fieldLastName.getText());
        currentEditUser.setTitle(fieldTitle.getText().isEmpty() ? null : fieldTitle.getText());
        currentEditUser.setSuffix(comboSuffix.getSelectedItem().toString().equals("None") ? null : comboSuffix.getSelectedItem().toString());
        currentEditUser.setAddressOne(fieldAdrOne.getText());
        currentEditUser.setAddressTwo(fieldAdrTwo.getText().isEmpty() ? null : fieldAdrTwo.getText());
        currentEditUser.setAddressThree(fieldAdrThree.getText().isEmpty() ? null : fieldAdrThree.getText());
        currentEditUser.setCity(fieldCity.getText());
        currentEditUser.setZipcode(fieldZipcode.getText());
        currentEditUser.setState(comboState.getSelectedItem().toString());
        currentEditUser.setEmail(fieldEmail.getText().isEmpty() ? null : fieldEmail.getText());
        currentEditUser.setPhonePrimary(fieldPrimaryPhone.getText().isEmpty() ? null : fieldPrimaryPhone.getText());
        currentEditUser.setPhoneSecondary(fieldSecondaryPhone.getText().isEmpty() ? null : fieldSecondaryPhone.getText());
        currentEditUser.setImage(fieldImage != null ? fieldImage : currentEditUser.getImage());

        currentEditUser.getLogon().setLogonName(fieldUsername.getText());
        currentEditUser.getLogon().setPositionTitle(comboPositionEdit.getSelectedItem().toString());

        boolean result = DatabaseManager.save(currentEditUser, currentEditUser.getLogon());
        String notification = (result) ? currentEditUser.getNameFirst()+ " Updated" : "Error, Please try again! ";

        labelNotification.setText(notification);
        if (result) {
            labelNotification.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        } else {
            labelNotification.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Yellow"));
        }

        StateManager.refresh = true;

        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    // Methods
    private void setEditUser(Person user) {
        int index = 0;
        currentEditUser = user;

        int curUserID = StateManager.getCurrentUser().getPersonID();


        if (user != null) {
            for (int i = 0; i < positions.size(); i++) {
                String box = positions.get(i).getPositionTitle();
                String usr = user.getLogon().getPositionTitle();
                if (box.equals(usr)) {
                    index = i;
                    break;
                }
            }

            progressLogonID.setValue(3);

            for (int i = 0; i < getAllUsernameLabels().size(); i++) {
                getAllUsernameLabels().get(i).setBackground(UIManager.getDefaults().getColor("Actions.Green"));
            }

            
            fieldUsername.setText(user.getLogon().getLogonName());
            fieldTitle.setText(user.getTitle());
            fieldFirstName.setText(user.getNameFirst());
            fieldMiddleName.setText(user.getNameMiddle());
            fieldLastName.setText(user.getNameLast());
            fieldPrimaryPhone.setText(user.getPhonePrimary());
            fieldSecondaryPhone.setText(user.getPhoneSecondary());
            fieldEmail.setText(user.getEmail());
            fieldAdrOne.setText(user.getAddressOne());
            fieldAdrTwo.setText(user.getAddressTwo());
            fieldAdrThree.setText(user.getAddressThree());
            fieldCity.setText(user.getCity());
            fieldZipcode.setText(user.getZipcode());

            if (user.getSuffix() == null) {
                comboSuffix.setSelectedItem("None");
            } else {
                comboSuffix.setSelectedItem(user.getSuffix());
            }
            comboPositionEdit.setSelectedIndex(index);
            comboState.setSelectedItem(user.getState());
            
            labelItemImage.setIcon(user.getImageIcon(ImageManager.SIZE_PREVIEW));
            labelItemImage.setText(null);

        } else {
            comboPositionEdit.setSelectedItem(index);
            comboSuffix.setSelectedIndex(0);
            comboState.setSelectedIndex(0);

            fieldUsername.setText(null);
            fieldTitle.setText(null);
            fieldFirstName.setText(null);
            fieldMiddleName.setText(null);
            fieldLastName.setText(null);
            fieldPrimaryPhone.setText(null);
            fieldSecondaryPhone.setText(null);
            fieldEmail.setText(null);
            fieldAdrOne.setText(null);
            fieldAdrTwo.setText(null);
            fieldAdrThree.setText(null);
            fieldCity.setText(null);
            fieldZipcode.setText(null);

            labelItemImage.setIcon(null);
            labelItemImage.setText(null);

        }

    }
    
    public ArrayList<JLabel> getAllUsernameLabels() {
        ArrayList<JLabel> list = new ArrayList<>();
        list.add(labelReqOne);
        list.add(labelReqTwo);
        list.add(labelReqThree);

        return list;
    }

    public ArrayList<JTextField> getAllContactFields() {
        ArrayList<JTextField> allFields = new ArrayList<>();

        allFields.add(fieldTitle);
        allFields.add(fieldFirstName);
        allFields.add(fieldLastName);
        allFields.add(fieldEmail);
        allFields.add(fieldPrimaryPhone);
        allFields.add(fieldSecondaryPhone);

        return allFields;
    }

    public ArrayList<JTextField> getAllShippingFields() {
        ArrayList<JTextField> allFields = new ArrayList<>();

        allFields.add(fieldAdrOne);
        allFields.add(fieldAdrTwo);
        allFields.add(fieldAdrThree);
        allFields.add(fieldCity);
        allFields.add(fieldZipcode);

        return allFields;
    }

    private boolean validateForm() {
        // Gather all validation results
        ArrayList<Boolean> validationResultsUsername = ValidationManager.validateUsername(fieldUsername.getText());
        ArrayList<Boolean> validationResultsContact = ValidationManager.validateContactInformation(fieldTitle.getText(), fieldFirstName.getText(), fieldLastName.getText(), fieldEmail.getText(), fieldPrimaryPhone.getText(), fieldSecondaryPhone.getText());
        ArrayList<Boolean> validationResultsShipping = ValidationManager.validateShippingInformation(fieldAdrOne.getText(), fieldAdrTwo.getText(), fieldAdrThree.getText(), fieldCity.getText(), fieldZipcode.getText());

        // Gather all GUI components to update
        ArrayList<JLabel> labelsForUsername = getAllUsernameLabels();
        ArrayList<JTextField> fieldsForContact = getAllContactFields();
        ArrayList<JTextField> fieldsForShipping = getAllShippingFields();

        // Initialize progress / set progress
        boolean canUpdate = true;
        int logonIDProgress = 0;

        progressLogonID.setValue(0);

        String selectedPosition = ((Position) comboPositionEdit.getSelectedItem()).getPositionTitle();
        String editUserPosition = currentEditUser.getLogon().getPositionTitle();

        String fieldUsernameText = fieldUsername.getText().isEmpty() ? null : fieldUsername.getText();
        String fieldTitleText = fieldTitle.getText().isEmpty() ? null : fieldTitle.getText();
        String fieldFirstNameText = fieldFirstName.getText().isEmpty() ? null : fieldFirstName.getText();
        String fieldMiddleNameText = fieldMiddleName.getText().isEmpty() ? null : fieldMiddleName.getText();
        String fieldLastNameText = fieldLastName.getText().isEmpty() ? null : fieldLastName.getText();
        String fieldPrimaryPhoneText = fieldPrimaryPhone.getText().isEmpty() ? null : fieldPrimaryPhone.getText();
        String fieldSecondaryPhoneText = fieldSecondaryPhone.getText().isEmpty() ? null : fieldSecondaryPhone.getText();
        String fieldEmailText = fieldEmail.getText().isEmpty() ? null : fieldEmail.getText();
        String fieldAdrOneText = fieldAdrOne.getText().isEmpty() ? null : fieldAdrOne.getText();
        String fieldAdrTwoText = fieldAdrTwo.getText().isEmpty() ? null : fieldAdrTwo.getText();
        String fieldAdrThreeText = fieldAdrThree.getText().isEmpty() ? null : fieldAdrThree.getText();
        String fieldCityText = fieldCity.getText().isEmpty() ? null : fieldCity.getText();
        String fieldZipcodeText = fieldZipcode.getText().isEmpty() ? null : fieldZipcode.getText();
        boolean suffixBox = (currentEditUser.getSuffix() == null && comboSuffix.getSelectedItem() == "None") ? true : false;

        // ----- UPDATING GUI -----
        // Update the JLabels for the username requirements
        for (int i = 0; i < labelsForUsername.size(); i++) {
            if (validationResultsUsername.get(i)) {
                labelsForUsername.get(i).setBackground(UIManager.getDefaults().getColor("Actions.Green"));
                logonIDProgress++;
            } else {
                labelsForUsername.get(i).setBackground(UIManager.getDefaults().getColor("Actions.Red"));
                canUpdate = false;
            }
        }

        // Update the JTextFields for the Contact Information (background colors)
        for (int i = 0; i < fieldsForContact.size(); i++) {
            if (validationResultsContact.get(i)) {
                fieldsForContact.get(i).setBackground(new Color(70, 73, 75));
            } else {
                fieldsForContact.get(i).setBackground(UIManager.getDefaults().getColor("Actions.Red"));
                canUpdate = false;
            }
        }

        // Update the JTextFields for the Shipping Information (background colors)
        for (int i = 0; i < fieldsForShipping.size(); i++) {
            if (validationResultsShipping.get(i)) {
                fieldsForShipping.get(i).setBackground(new Color(70, 73, 75));
            } else {
                fieldsForShipping.get(i).setBackground(UIManager.getDefaults().getColor("Actions.Red"));
                canUpdate = false;
            }
        }

        // Update form progress 
        progressLogonID.setValue(logonIDProgress);

        if (Objects.equals(fieldUsernameText, currentEditUser.getLogon().getLogonName()) && Objects.equals(fieldTitleText, currentEditUser.getTitle())
                && Objects.equals(fieldFirstNameText, currentEditUser.getNameFirst()) && Objects.equals(fieldMiddleNameText, currentEditUser.getNameMiddle())
                && Objects.equals(fieldLastNameText, currentEditUser.getNameLast()) && Objects.equals(fieldPrimaryPhoneText, currentEditUser.getPhonePrimary())
                && Objects.equals(fieldSecondaryPhoneText, currentEditUser.getPhoneSecondary()) && Objects.equals(fieldEmailText, currentEditUser.getEmail())
                && Objects.equals(fieldAdrOneText, currentEditUser.getAddressOne()) && Objects.equals(fieldAdrTwoText, currentEditUser.getAddressTwo())
                && Objects.equals(fieldAdrThreeText, currentEditUser.getAddressThree()) && Objects.equals(fieldCityText, currentEditUser.getCity())
                && Objects.equals(fieldZipcodeText, currentEditUser.getZipcode()) && fieldImage == null && suffixBox
                && comboState.getSelectedItem().equals(currentEditUser.getState()) && editUserPosition.equals(selectedPosition)
                ) {
            canUpdate = false;
        }

        btnUpdate.setEnabled(canUpdate);

        return canUpdate;
    }

    private void uploadImage() {
        FileNameExtensionFilter filter = new FileNameExtensionFilter("JPG & PNG Images", "jpg", "png", "jpeg");

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(filter);
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                // Gather byte data from img file and put in imageIcon/Image
                File imgFile = fileChooser.getSelectedFile();
                byte[] b = Files.readAllBytes(imgFile.toPath());

                ImageIcon icon = ImageManager.getScaledImageIcon(b, ImageManager.SIZE_PREVIEW);

                // Prepare image panel and add image
                labelItemImage.setIcon(icon);

                // Save image to image field as a blob                              
                fieldImage = (Blob) DatabaseManager.getConnection().createBlob();
                fieldImage.setBytes(1, b);

                btnUpdate.setEnabled(true);

                revalidate();
                repaint();
            } catch (Exception ex) {
                System.out.println(ex);
            }

        }
    }

    private void loadComboBoxes() {
        Thread loadComboBoxThread = new Thread(new Runnable() {
            @Override
            public void run() {
                ArrayList<Position> pList = DatabaseManager.getAllPositions();
                positions = new ArrayList<>(pList);

                pList.add(0, new Position(-1));
                comboPositionEdit.setModel(new DefaultComboBoxModel(positions.toArray()));

                setEditUser(StateManager.getCurrentUser());
            }
        });

        loadComboBoxThread.start();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChangeImage;
    private javax.swing.JButton btnRedo;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboPositionEdit;
    private javax.swing.JComboBox<String> comboState;
    private javax.swing.JComboBox<String> comboSuffix;
    private javax.swing.JTextField fieldAdrOne;
    private javax.swing.JTextField fieldAdrThree;
    private javax.swing.JTextField fieldAdrTwo;
    private javax.swing.JTextField fieldCity;
    private javax.swing.JTextField fieldEmail;
    private javax.swing.JTextField fieldFirstName;
    private javax.swing.JTextField fieldLastName;
    private javax.swing.JTextField fieldMiddleName;
    private javax.swing.JTextField fieldPrimaryPhone;
    private javax.swing.JTextField fieldSecondaryPhone;
    private javax.swing.JTextField fieldTitle;
    private javax.swing.JTextField fieldUsername;
    private javax.swing.JTextField fieldZipcode;
    private javax.swing.JLabel labelItemImage;
    private javax.swing.JLabel labelNotification;
    private javax.swing.JLabel labelReqOne;
    private javax.swing.JLabel labelReqThree;
    private javax.swing.JLabel labelReqTwo;
    private javax.swing.JLabel labelStepFour;
    private javax.swing.JLabel labelStepTwo;
    private javax.swing.JLabel labelUserReq;
    private javax.swing.JPanel panelEditFields;
    private javax.swing.JPanel panelForm;
    private javax.swing.JPanel panelReq;
    private javax.swing.JProgressBar progressLogonID;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JPanel sectionFivePanel;
    private javax.swing.JPanel sectionFourPanel;
    private javax.swing.JPanel sectionOnePanel;
    private javax.swing.JPanel sectionThreePanel;
    // End of variables declaration//GEN-END:variables
}
