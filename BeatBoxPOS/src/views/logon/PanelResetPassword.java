
package views.logon;

import entity.Logon;
import entity.SecurityQuestion;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import util.DatabaseManager;
import util.MessageBox;
import util.StateManager;
import util.ValidationManager;

 class PanelResetPassword extends javax.swing.JPanel {

    private StateManager panelState;
    private Logon targetedAccount;
    
    ArrayList<SecurityQuestion> uniqueQuestions; 
    
    
    public PanelResetPassword(StateManager panelState) {
        this.panelState = panelState;
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelStepTwo = new javax.swing.JPanel();
        displayPanelTwo = new javax.swing.JPanel();
        labelOne = new javax.swing.JLabel();
        fieldAnswerOne = new javax.swing.JTextField();
        labelTwo = new javax.swing.JLabel();
        fieldAnswerTwo = new javax.swing.JTextField();
        labelThree = new javax.swing.JLabel();
        fieldAnswerThree = new javax.swing.JTextField();
        btnNextTwo = new javax.swing.JButton();
        panelStepThree = new javax.swing.JPanel();
        displayPanelThree = new javax.swing.JPanel();
        fieldPassword = new javax.swing.JTextField();
        panelReq = new javax.swing.JPanel();
        labelPassReq = new javax.swing.JLabel();
        labelReqOneA = new javax.swing.JLabel();
        labelReqTwoA = new javax.swing.JLabel();
        labelReqThreeA = new javax.swing.JLabel();
        labelReqFourA = new javax.swing.JLabel();
        labelReqFiveA = new javax.swing.JLabel();
        progressPassword = new javax.swing.JProgressBar();
        btnResetPassword = new javax.swing.JButton();
        panelMain = new javax.swing.JPanel();
        panelStepOne = new javax.swing.JPanel();
        displayPanel = new javax.swing.JPanel();
        fieldUsername = new javax.swing.JTextField();
        labelUsername = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();

        panelStepTwo.setName("ResetPasswordTwo"); // NOI18N
        panelStepTwo.setLayout(new java.awt.GridBagLayout());

        displayPanelTwo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "2. Security Questions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        displayPanelTwo.setLayout(new java.awt.GridBagLayout());

        labelOne.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelOne.setText("Question 1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        displayPanelTwo.add(labelOne, gridBagConstraints);

        fieldAnswerOne.setBorder(javax.swing.BorderFactory.createTitledBorder("Answer One"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        displayPanelTwo.add(fieldAnswerOne, gridBagConstraints);
        fieldAnswerOne.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                validateSecurityFields();
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
            }
        });

        labelTwo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelTwo.setText("Question 2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        displayPanelTwo.add(labelTwo, gridBagConstraints);

        fieldAnswerTwo.setBorder(javax.swing.BorderFactory.createTitledBorder("Answer Two"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        displayPanelTwo.add(fieldAnswerTwo, gridBagConstraints);
        fieldAnswerTwo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                validateSecurityFields();
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
            }
        });

        labelThree.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelThree.setText("Question 3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        displayPanelTwo.add(labelThree, gridBagConstraints);

        fieldAnswerThree.setBorder(javax.swing.BorderFactory.createTitledBorder("Answer Three"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        displayPanelTwo.add(fieldAnswerThree, gridBagConstraints);
        fieldAnswerThree.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                validateSecurityFields();
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        panelStepTwo.add(displayPanelTwo, gridBagConstraints);

        btnNextTwo.setBackground(new java.awt.Color(0, 153, 153));
        btnNextTwo.setText("Next");
        btnNextTwo.setEnabled(false);
        btnNextTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextTwoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 45;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelStepTwo.add(btnNextTwo, gridBagConstraints);

        panelStepThree.setName("ResetPasswordThree"); // NOI18N
        panelStepThree.setLayout(new java.awt.GridBagLayout());

        displayPanelThree.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "3. Enter New Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        displayPanelThree.setLayout(new java.awt.GridBagLayout());

        fieldPassword.setBorder(javax.swing.BorderFactory.createTitledBorder("New Password *"));
        fieldPassword.setName("passwordField"); // NOI18N
        fieldPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                validatePasswordField();
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        displayPanelThree.add(fieldPassword, gridBagConstraints);

        panelReq.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelReq.setLayout(new java.awt.GridBagLayout());

        labelPassReq.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPassReq.setText("Password Requirements:");
        labelPassReq.setName("titleTwo"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 25);
        panelReq.add(labelPassReq, gridBagConstraints);

        labelReqOneA.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        labelReqOneA.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelReqOneA.setForeground(new java.awt.Color(0, 0, 0));
        labelReqOneA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelReqOneA.setText("Length between 8-20 (Required)");
        labelReqOneA.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 25);
        panelReq.add(labelReqOneA, gridBagConstraints);

        labelReqTwoA.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        labelReqTwoA.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelReqTwoA.setForeground(new java.awt.Color(0, 0, 0));
        labelReqTwoA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelReqTwoA.setText("Upper case characters");
        labelReqTwoA.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 25);
        panelReq.add(labelReqTwoA, gridBagConstraints);

        labelReqThreeA.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        labelReqThreeA.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelReqThreeA.setForeground(new java.awt.Color(0, 0, 0));
        labelReqThreeA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelReqThreeA.setText("Lower case characters");
        labelReqThreeA.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 25);
        panelReq.add(labelReqThreeA, gridBagConstraints);

        labelReqFourA.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        labelReqFourA.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelReqFourA.setForeground(new java.awt.Color(0, 0, 0));
        labelReqFourA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelReqFourA.setText("Numbers (0 through 9)");
        labelReqFourA.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 25);
        panelReq.add(labelReqFourA, gridBagConstraints);

        labelReqFiveA.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        labelReqFiveA.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelReqFiveA.setForeground(new java.awt.Color(0, 0, 0));
        labelReqFiveA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelReqFiveA.setText("Special characters ()!@#$%^&*");
        labelReqFiveA.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 25);
        panelReq.add(labelReqFiveA, gridBagConstraints);

        progressPassword.setForeground(new java.awt.Color(0, 153, 153));
        progressPassword.setMaximum(4);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.ipady = 21;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 30);
        panelReq.add(progressPassword, gridBagConstraints);
        progressPassword.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                if (progressPassword.getValue() == progressPassword.getMaximum()) {
                    btnResetPassword.setEnabled(true);
                } else {
                    btnResetPassword.setEnabled(false);
                }
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        displayPanelThree.add(panelReq, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelStepThree.add(displayPanelThree, gridBagConstraints);

        btnResetPassword.setBackground(new java.awt.Color(0, 153, 153));
        btnResetPassword.setText("Reset Password");
        btnResetPassword.setEnabled(false);
        btnResetPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetPasswordActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 45;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelStepThree.add(btnResetPassword, gridBagConstraints);

        setName("Logon"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        panelMain.setLayout(new java.awt.BorderLayout());

        panelStepOne.setName("ResetPasswordOne"); // NOI18N
        panelStepOne.setLayout(new java.awt.GridBagLayout());

        displayPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "1. Enter Username", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        displayPanel.setLayout(new java.awt.GridBagLayout());

        fieldUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldUsernameKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 100);
        displayPanel.add(fieldUsername, gridBagConstraints);

        labelUsername.setText("Username");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 11, 10, 11);
        displayPanel.add(labelUsername, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(50, 50, 50, 50);
        panelStepOne.add(displayPanel, gridBagConstraints);

        btnNext.setBackground(new java.awt.Color(0, 153, 153));
        btnNext.setText("Next");
        btnNext.setEnabled(false);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 45;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelStepOne.add(btnNext, gridBagConstraints);

        panelMain.add(panelStepOne, java.awt.BorderLayout.CENTER);

        add(panelMain, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void fieldUsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldUsernameKeyReleased
        // TODO add your handling code here:
        if (fieldUsername.getText().length() > 0) {
            btnNext.setEnabled(true);
        } else {
            btnNext.setEnabled(false);
        }
    }//GEN-LAST:event_fieldUsernameKeyReleased

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        targetedAccount = null;
        String user = fieldUsername.getText();

        targetedAccount = DatabaseManager.getLogon(user);

        if (targetedAccount != null) {
            showPanel(panelStepTwo);
            setUpFields();
        } else {
            new MessageBox(true, "This is not a valid username, Please try again", MessageBox.ERROR);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnNextTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextTwoActionPerformed
        // TODO add your handling code here:
        validateSecurityAnswers();
    }//GEN-LAST:event_btnNextTwoActionPerformed

    private void btnResetPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetPasswordActionPerformed
        // TODO add your handling code here:
        resetPassword();
    }//GEN-LAST:event_btnResetPasswordActionPerformed

    private void showPanel(JPanel panel) {
        panelMain.removeAll();
        
        panelMain.add(panel, BorderLayout.CENTER);
        
        panel.setVisible(true);
        
        revalidate();
        repaint();
        
    }
    
    // STEP TWO
    
    // Methods Get
    public ArrayList<JTextField> getAllSecurityQuestionFields() {
        ArrayList<JTextField> allFields = new ArrayList<>();

        allFields.add(fieldAnswerOne);
        allFields.add(fieldAnswerTwo);
        allFields.add(fieldAnswerThree);

        return allFields;
    }

    // Methods Void
    private void setUpFields() {
        uniqueQuestions = DatabaseManager.getSecurityQuestion(targetedAccount);

        labelOne.setText(uniqueQuestions.get(0).getQuestionPrompt());
        labelTwo.setText(uniqueQuestions.get(1).getQuestionPrompt());
        labelThree.setText(uniqueQuestions.get(2).getQuestionPrompt());
    }

    private void validateSecurityFields() {
        ArrayList<Boolean> validationResultsSecurity = ValidationManager.validateSecurityQuestions(fieldAnswerOne.getText(), fieldAnswerTwo.getText(), fieldAnswerThree.getText());
        ArrayList<JTextField> fieldsForSecurity = getAllSecurityQuestionFields();

        boolean btnEnabled = true;
      
        
        for (int i = 0; i < fieldsForSecurity.size(); i++) {
            if (validationResultsSecurity.get(i)) {
                fieldsForSecurity.get(i).setBackground(new Color(70, 73, 75));
            } else {
                fieldsForSecurity.get(i).setBackground(UIManager.getDefaults().getColor("Actions.Red"));
                btnEnabled = false;
            }
        }

        btnNextTwo.setEnabled(btnEnabled);
    }

    private void validateSecurityAnswers() {
        boolean valid = ValidationManager.validateSecurityAnswers(targetedAccount, fieldAnswerOne.getText(), fieldAnswerTwo.getText(), fieldAnswerThree.getText());

        if (valid) {
            showPanel(panelStepThree);
        } else {
            new MessageBox(true, "One or more security questions have not been answered correctly. Please try again.", MessageBox.ERROR);
        }
    }
    
    // STEP THREE
    
    // Methods Get
    public ArrayList<JLabel> getAllPasswordLabels() {
        ArrayList<JLabel> list = new ArrayList<>();
        list.add(labelReqOneA);
        list.add(labelReqTwoA);
        list.add(labelReqThreeA);
        list.add(labelReqFourA);
        list.add(labelReqFiveA);

        return list;
    }

    // Methods Void
    private void validatePasswordField() {
        // Gather ValidationManager Results
        ArrayList<Boolean> validationResultsPassword = ValidationManager.validatePassword(fieldPassword.getText());

        // Gather gui elements
        ArrayList<JLabel> labelsForPassword = getAllPasswordLabels();

        // Initialize progress / set progress
        int passwordProgress = 0;
        int optionalsValid = 0;

        progressPassword.setValue(0);

        // Update the JLabels for the password requirements
        for (int i = 0; i < labelsForPassword.size(); i++) {
            if (validationResultsPassword.get(i)) {
                // check if field is 1 of the 4 choices
                if (i > 0 && optionalsValid < 3) {
                    optionalsValid++;
                    passwordProgress++;
                } else if (i == 0) {
                    passwordProgress++;
                }
                labelsForPassword.get(i).setBackground(UIManager.getDefaults().getColor("Actions.Green"));
            } else {
                labelsForPassword.get(i).setBackground(UIManager.getDefaults().getColor("Actions.Red"));
            }
        }

        progressPassword.setValue(passwordProgress);
        revalidate();
        repaint();
    }

    private void resetPassword() {

        // check if the password isn't the same as the last one
        if (ValidationManager.validateResetPassword(targetedAccount.getPassword(), fieldPassword.getText())) {
            targetedAccount.setPassword(fieldPassword.getText());
            DatabaseManager.save(targetedAccount);
            new MessageBox(false, "Your Password has been successfully updated!", MessageBox.SUCCESS);
            panelState.changePanel(new PanelLogon(panelState));
        } else {
            new MessageBox(true, "This is your old password! Select a new one or cancel this form", MessageBox.ERROR);
        }

    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnNextTwo;
    private javax.swing.JButton btnResetPassword;
    private javax.swing.JPanel displayPanel;
    private javax.swing.JPanel displayPanelThree;
    private javax.swing.JPanel displayPanelTwo;
    private javax.swing.JTextField fieldAnswerOne;
    private javax.swing.JTextField fieldAnswerThree;
    private javax.swing.JTextField fieldAnswerTwo;
    private javax.swing.JTextField fieldPassword;
    private javax.swing.JTextField fieldUsername;
    private javax.swing.JLabel labelOne;
    private javax.swing.JLabel labelPassReq;
    private javax.swing.JLabel labelReqFiveA;
    private javax.swing.JLabel labelReqFourA;
    private javax.swing.JLabel labelReqOneA;
    private javax.swing.JLabel labelReqThreeA;
    private javax.swing.JLabel labelReqTwoA;
    private javax.swing.JLabel labelThree;
    private javax.swing.JLabel labelTwo;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JPanel panelMain;
    private javax.swing.JPanel panelReq;
    private javax.swing.JPanel panelStepOne;
    private javax.swing.JPanel panelStepThree;
    private javax.swing.JPanel panelStepTwo;
    private javax.swing.JProgressBar progressPassword;
    // End of variables declaration//GEN-END:variables
}
