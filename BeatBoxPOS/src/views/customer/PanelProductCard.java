package views.customer;

import entity.InventoryItem;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.FocusEvent;
import java.awt.event.FocusEvent.Cause;
import java.awt.event.ItemEvent;
import java.text.NumberFormat;
import javax.swing.ImageIcon;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import util.CartManager;
import util.ImageManager;


/*
Author: Braeden Palomino
Date: 11/14/24
Description: GUI panel for the InventoryItem Object. Handles some user actions and events pertaining to browsing and cart actions.
 */
public class PanelProductCard extends javax.swing.JPanel {

    private InventoryItem item;
    private PanelCustomer panelCustomer;
    private CartManager cartManager;

    private Color originalButtonColor;
    private Color originalFontColor;
    private Color originalComboColor;

    public PanelProductCard(PanelCustomer panelCustomer, InventoryItem item) {
        initComponents();

        this.item = item;
        this.panelCustomer = panelCustomer;

        setOpaque(true);

        setUpBrowsingCard();
    }

    public PanelProductCard(PanelCustomer panelCustomer, InventoryItem item, CartManager cartManager) {
        initComponents();

        this.cartManager = cartManager;
        this.item = item;
        this.panelCustomer = panelCustomer;

        setOpaque(true);

        setUpCartCard();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelCardBrowse = new javax.swing.JPanel();
        textAreaName = new javax.swing.JTextPane();
        labelImage = new javax.swing.JLabel();
        labelPrice = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        panelActions = new javax.swing.JPanel();
        labelCartPrice = new javax.swing.JLabel();
        textAreaCartName = new javax.swing.JTextArea();
        btnUpdate = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        panelComboCart = new javax.swing.JPanel();
        comboQuantity = new javax.swing.JComboBox<>();
        labelCartImage = new javax.swing.JLabel();

        panelCardBrowse.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        panelCardBrowse.setLayout(new java.awt.GridBagLayout());

        textAreaName.setEditable(false);
        textAreaName.setBorder(null);
        textAreaName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        textAreaName.setText("This is where the product name goes");
        textAreaName.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        panelCardBrowse.add(textAreaName, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        panelCardBrowse.add(labelImage, gridBagConstraints);

        labelPrice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelPrice.setText("$999.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelCardBrowse.add(labelPrice, gridBagConstraints);

        btnView.setBackground(new java.awt.Color(0, 153, 153));
        btnView.setText("View");
        btnView.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnViewFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnViewFocusLost(evt);
            }
        });
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 17;
        gridBagConstraints.ipady = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelCardBrowse.add(btnView, gridBagConstraints);

        setName("Customer"); // NOI18N
        setPreferredSize(new java.awt.Dimension(225, 315));
        setLayout(new java.awt.BorderLayout());

        panelActions.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 3, true));
        panelActions.setLayout(new java.awt.GridBagLayout());

        labelCartPrice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelCartPrice.setText("$999.00");
        labelCartPrice.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelActions.add(labelCartPrice, gridBagConstraints);

        textAreaCartName.setEditable(false);
        textAreaCartName.setColumns(20);
        textAreaCartName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        textAreaCartName.setLineWrap(true);
        textAreaCartName.setRows(5);
        textAreaCartName.setWrapStyleWord(true);
        textAreaCartName.setFocusable(false);
        textAreaCartName.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        panelActions.add(textAreaCartName, gridBagConstraints);

        btnUpdate.setBackground(new java.awt.Color(0, 153, 153));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setEnabled(false);
        btnUpdate.setName("Action"); // NOI18N
        btnUpdate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnUpdateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnUpdateFocusLost(evt);
            }
        });
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 3);
        panelActions.add(btnUpdate, gridBagConstraints);

        btnRemove.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        btnRemove.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRemove.setText("Remove");
        btnRemove.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnRemoveFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnRemoveFocusLost(evt);
            }
        });
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 7, 10, 10);
        panelActions.add(btnRemove, gridBagConstraints);

        panelComboCart.setBorder(javax.swing.BorderFactory.createTitledBorder("Quantity"));
        panelComboCart.setLayout(new java.awt.BorderLayout());

        comboQuantity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboQuantity.setFocusTraversalPolicy(getFocusTraversalPolicy());
        comboQuantity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboQuantityItemStateChanged(evt);
            }
        });
        comboQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comboQuantityFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                comboQuantityFocusLost(evt);
            }
        });
        panelComboCart.add(comboQuantity, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelActions.add(panelComboCart, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weighty = 0.1;
        panelActions.add(labelCartImage, gridBagConstraints);

        add(panelActions, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        int quantity = Integer.parseInt(comboQuantity.getSelectedItem().toString());

        // cartManager.addItem(item, quantity);     
        
        panelCustomer.addToCart(item, quantity);
        
        String amt = CartManager.doubleAsCurrency(cartManager.getSubtotal(false));
        
        panelCustomer.setEstimatedCartTotal("Estimated Subtotal: " + amt);
        
        btnUpdate.setEnabled(false);

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:

        panelCustomer.removeItem(item);

        String amt = CartManager.doubleAsCurrency(cartManager.getSubtotal(false));
        
        panelCustomer.setEstimatedCartTotal("Estimated Subtotal: " + amt);
        
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void comboQuantityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboQuantityItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            btnUpdate.setEnabled(true);
        }
    }//GEN-LAST:event_comboQuantityItemStateChanged

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        if (cartManager == null) {
            panelCustomer.showProductDetails(item);
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnViewFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnViewFocusGained
        // TODO add your handling code here:
        if (evt.getCause() != Cause.UNKNOWN) {
            int currentPos = panelCustomer.getProductScrollPane().getVerticalScrollBar().getValue();
            int index = Integer.parseInt(this.getName());
            int scrollValue = ((index % 3) == 0) ? ((int) index / 3) * this.getHeight() : currentPos;

            panelCustomer.getProductScrollPane().getVerticalScrollBar().setValue(scrollValue);
        }

        btnFocusGained(evt);
    }//GEN-LAST:event_btnViewFocusGained

    private void btnViewFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnViewFocusLost
        // TODO add your handling code here:
        btnFocusLost(evt);
    }//GEN-LAST:event_btnViewFocusLost

    private void btnUpdateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnUpdateFocusGained
        // TODO add your handling code here:          
        btnFocusGained(evt);
    }//GEN-LAST:event_btnUpdateFocusGained

    private void btnUpdateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnUpdateFocusLost
        // TODO add your handling code here:
        btnFocusLost(evt);
    }//GEN-LAST:event_btnUpdateFocusLost

    private void btnRemoveFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnRemoveFocusGained
        // TODO add your handling code here:
        if (evt.getCause() != Cause.UNKNOWN) {
            Rectangle itemCardBounds = this.getBounds();

            panelCustomer.getCartScrollPane().getViewport().setViewPosition(new Point(itemCardBounds.x, itemCardBounds.y));
        }

        btnFocusGained(evt);
    }//GEN-LAST:event_btnRemoveFocusGained

    private void btnRemoveFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnRemoveFocusLost
        // TODO add your handling code here:
        btnFocusLost(evt);
    }//GEN-LAST:event_btnRemoveFocusLost

    private void comboQuantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboQuantityFocusGained
        // TODO add your handling code here:
        originalComboColor = evt.getComponent().getBackground();
        originalFontColor = evt.getComponent().getForeground();

        if (evt.getCause() != Cause.UNKNOWN) {
            Rectangle itemCardBounds = this.getBounds();

            panelCustomer.getCartScrollPane().getViewport().setViewPosition(new Point(itemCardBounds.x, itemCardBounds.y));
        }

        // panelCustomer.getCartScrollPane().getVerticalScrollBar().setValue(scrollValue);
        evt.getComponent().setBackground(originalComboColor.brighter());
        evt.getComponent().setForeground(originalFontColor.brighter());
    }//GEN-LAST:event_comboQuantityFocusGained

    private void comboQuantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboQuantityFocusLost
        // TODO add your handling code here:
        evt.getComponent().setBackground(originalComboColor);
        evt.getComponent().setForeground(originalFontColor);
    }//GEN-LAST:event_comboQuantityFocusLost

    private void setUpBrowsingCard() {
        StyledDocument doc = textAreaName.getStyledDocument();
        SimpleAttributeSet style = new SimpleAttributeSet();
        StyleConstants.setAlignment(style, StyleConstants.ALIGN_CENTER);
        doc.setParagraphAttributes(0, doc.getLength(), style, false);
        NumberFormat formatter = NumberFormat.getCurrencyInstance();

        String itemName = item.getItemName();
        ImageIcon itemImage = item.getImageIcon(ImageManager.SIZE_PREVIEW);
        String itemPrice = formatter.format(item.getCost());

        textAreaName.setText(itemName);
        labelImage.setIcon(itemImage);
        labelPrice.setText(itemPrice);

        this.removeAll();
        this.add(panelCardBrowse, BorderLayout.CENTER);

    }

    private void setUpCartCard() {
        StyledDocument doc = textAreaName.getStyledDocument();
        SimpleAttributeSet style = new SimpleAttributeSet();
        StyleConstants.setAlignment(style, StyleConstants.ALIGN_CENTER);
        doc.setParagraphAttributes(0, doc.getLength(), style, false);
        NumberFormat formatter = NumberFormat.getCurrencyInstance();

        String itemName = item.getItemName();
        ImageIcon itemImage = item.getImageIcon(ImageManager.SIZE_CART_VIEW);
        String itemPrice = formatter.format(item.getCost());

        textAreaCartName.setText(itemName);
        labelCartImage.setIcon(itemImage);
        labelCartPrice.setText(itemPrice);

        int selectIndex = 0;
        int thisItemsQuantity = cartManager.getCart().get(item);

        comboQuantity.removeAllItems();
        for (int i = 1; i <= item.getQuantity(); i++) {
            String val = String.valueOf(i);

            if (i == thisItemsQuantity) {
                selectIndex = i - 1;
            }

            comboQuantity.addItem(val);
        }

        comboQuantity.setSelectedIndex(selectIndex);

        this.setSize(new Dimension(100, 100));

        this.removeAll();
        this.setLayout(new FlowLayout());
        this.add(panelActions);
        panelActions.setVisible(true);

        btnUpdate.setEnabled(false);

    }

    // EVENT METHODS
    private void btnFocusGained(FocusEvent evt) {
        originalButtonColor = evt.getComponent().getBackground();
        originalFontColor = evt.getComponent().getForeground();

        evt.getComponent().setBackground(originalButtonColor.brighter());
        evt.getComponent().setForeground(originalFontColor.brighter());
    }

    private void btnFocusLost(FocusEvent evt) {
        evt.getComponent().setBackground(originalButtonColor);
        evt.getComponent().setForeground(originalFontColor);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> comboQuantity;
    private javax.swing.JLabel labelCartImage;
    private javax.swing.JLabel labelCartPrice;
    private javax.swing.JLabel labelImage;
    private javax.swing.JLabel labelPrice;
    private javax.swing.JPanel panelActions;
    private javax.swing.JPanel panelCardBrowse;
    private javax.swing.JPanel panelComboCart;
    private javax.swing.JTextArea textAreaCartName;
    private javax.swing.JTextPane textAreaName;
    // End of variables declaration//GEN-END:variables
}
