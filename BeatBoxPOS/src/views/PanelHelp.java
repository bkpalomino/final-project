package views;

import javax.swing.ImageIcon;
import util.ImageManager;
import util.ResourceLoader;
import util.StateManager;

public class PanelHelp extends javax.swing.JPanel {

    private StateManager panelState;

    public PanelHelp(StateManager panelState) {
        this.panelState = panelState;

        initComponents();
        setImages();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelTools = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        tabbedMain = new javax.swing.JTabbedPane();
        panelLogon = new javax.swing.JPanel();
        tabbedLogon = new javax.swing.JTabbedPane();
        panelLogIn = new javax.swing.JPanel();
        scrollPaneAA = new javax.swing.JScrollPane();
        panelAA = new javax.swing.JPanel();
        innerSrollPaneAA = new javax.swing.JScrollPane();
        textPaneAA = new javax.swing.JTextArea();
        imageLoginOne = new javax.swing.JLabel();
        panelResettingPassword = new javax.swing.JPanel();
        scrollPaneAB = new javax.swing.JScrollPane();
        panelAB = new javax.swing.JPanel();
        innerScrollPaneAB = new javax.swing.JScrollPane();
        textPaneAB = new javax.swing.JTextArea();
        imageResetOne = new javax.swing.JLabel();
        imageResetTwo = new javax.swing.JLabel();
        imageResetThree = new javax.swing.JLabel();
        imageResetFour = new javax.swing.JLabel();
        panelCreatingAccount = new javax.swing.JPanel();
        scrollPaneAC = new javax.swing.JScrollPane();
        panelAC = new javax.swing.JPanel();
        innerScrollPaneAC = new javax.swing.JScrollPane();
        textPaneAC = new javax.swing.JTextArea();
        imageCreateOne = new javax.swing.JLabel();
        imageCreateTwo = new javax.swing.JLabel();
        imageCreateThree = new javax.swing.JLabel();
        panelCustomer = new javax.swing.JPanel();
        tabbedCustomer = new javax.swing.JTabbedPane();
        panelBrowsing = new javax.swing.JPanel();
        scrollPaneBA = new javax.swing.JScrollPane();
        panelBA = new javax.swing.JPanel();
        scrollSectionOneBA = new javax.swing.JScrollPane();
        textPaneSectionOneBA = new javax.swing.JTextArea();
        scrollSectionTwoBA = new javax.swing.JScrollPane();
        textPaneSectionTwoBA = new javax.swing.JTextArea();
        scrollSectionThreeBA = new javax.swing.JScrollPane();
        textPaneSectionThreeBA = new javax.swing.JTextArea();
        scrollSectionFourBA = new javax.swing.JScrollPane();
        textPaneSectionFourBA = new javax.swing.JTextArea();
        scrollSectionFiveBA = new javax.swing.JScrollPane();
        textPaneSectionFiveBA = new javax.swing.JTextArea();
        imageBrowseOne = new javax.swing.JLabel();
        imageBrowseTwo = new javax.swing.JLabel();
        imageBrowseThree = new javax.swing.JLabel();
        imageBrowseFour = new javax.swing.JLabel();
        imageBrowseFive = new javax.swing.JLabel();
        imageBrowseSix = new javax.swing.JLabel();
        panelShopping = new javax.swing.JPanel();
        scrollPaneBB = new javax.swing.JScrollPane();
        panelBB = new javax.swing.JPanel();
        scrollSectionOneBB = new javax.swing.JScrollPane();
        textPaneSectionOneBB = new javax.swing.JTextArea();
        scrollSectionTwoBB = new javax.swing.JScrollPane();
        textPaneSectionTwoBB = new javax.swing.JTextArea();
        scrollSectionThreeBB = new javax.swing.JScrollPane();
        textPaneSectionThreeBB = new javax.swing.JTextArea();
        scrollSectionFourBB = new javax.swing.JScrollPane();
        textPaneSectionFourBB = new javax.swing.JTextArea();
        imageShopOne = new javax.swing.JLabel();
        imageShopTwo = new javax.swing.JLabel();
        imageShopThree = new javax.swing.JLabel();
        imageShopFour = new javax.swing.JLabel();
        imageShopFive = new javax.swing.JLabel();
        panelCheckout = new javax.swing.JPanel();
        scrollPaneBC = new javax.swing.JScrollPane();
        panelBC = new javax.swing.JPanel();
        innerScrollPaneBC = new javax.swing.JScrollPane();
        textPaneBC = new javax.swing.JTextArea();
        imageCheckoutOne = new javax.swing.JLabel();
        imageCheckoutTwo = new javax.swing.JLabel();
        imageCheckoutThree = new javax.swing.JLabel();
        imageCheckoutFour = new javax.swing.JLabel();
        panelKeyboardNav = new javax.swing.JPanel();
        tabbedNavigation = new javax.swing.JTabbedPane();
        panelUsingKeyboard = new javax.swing.JPanel();
        scrollPaneCA = new javax.swing.JScrollPane();
        panelCA = new javax.swing.JPanel();
        scrollSectionOneCA = new javax.swing.JScrollPane();
        textPaneSectionOneCA = new javax.swing.JTextArea();
        panelManager = new javax.swing.JPanel();
        tabbedManager = new javax.swing.JTabbedPane();
        panelPOS = new javax.swing.JPanel();
        scrollPaneDA = new javax.swing.JScrollPane();
        panelDA = new javax.swing.JPanel();
        scrollSectionOneDA = new javax.swing.JScrollPane();
        textPaneSectionOneDA = new javax.swing.JTextArea();
        scrollSectionTwoDA = new javax.swing.JScrollPane();
        textPaneSectionTwoDA = new javax.swing.JTextArea();
        imageSalesOne = new javax.swing.JLabel();
        imageSalesTwo = new javax.swing.JLabel();
        panelInventory = new javax.swing.JPanel();
        scrollPaneDB = new javax.swing.JScrollPane();
        panelDB = new javax.swing.JPanel();
        scrollSectionOneDB = new javax.swing.JScrollPane();
        textPaneSectionOneDB = new javax.swing.JTextArea();
        imageInventoryOne = new javax.swing.JLabel();
        imageInventoryTwo = new javax.swing.JLabel();
        imageInventoryThree = new javax.swing.JLabel();
        imageInventoryFour = new javax.swing.JLabel();
        panelReports = new javax.swing.JPanel();
        scrollPaneDC = new javax.swing.JScrollPane();
        panelDC = new javax.swing.JPanel();
        innerScrollPaneDC = new javax.swing.JScrollPane();
        textPaneDC = new javax.swing.JTextArea();
        imageReportsOne = new javax.swing.JLabel();
        imageReportsTwo = new javax.swing.JLabel();
        imageReportsThree = new javax.swing.JLabel();
        imageReportsFour = new javax.swing.JLabel();
        panelUsers = new javax.swing.JPanel();
        scrollPaneDD = new javax.swing.JScrollPane();
        panelDD = new javax.swing.JPanel();
        innerScrollPaneDD = new javax.swing.JScrollPane();
        textPaneBC2 = new javax.swing.JTextArea();
        imageUsersOne = new javax.swing.JLabel();
        imageUsersTwo = new javax.swing.JLabel();
        imageUsersThree = new javax.swing.JLabel();
        panelPromos = new javax.swing.JPanel();
        scrollPaneDE = new javax.swing.JScrollPane();
        panelDE = new javax.swing.JPanel();
        innerScrollPaneDE = new javax.swing.JScrollPane();
        textPaneDE = new javax.swing.JTextArea();
        imagePromosOne = new javax.swing.JLabel();
        imagePromosTwo = new javax.swing.JLabel();
        imagePromosThree = new javax.swing.JLabel();
        imagePromosFour = new javax.swing.JLabel();
        panelAccount = new javax.swing.JPanel();
        scrollPaneDF = new javax.swing.JScrollPane();
        panelDF = new javax.swing.JPanel();
        innerScrollPaneDF = new javax.swing.JScrollPane();
        textPaneDF = new javax.swing.JTextArea();
        imageAccountOne = new javax.swing.JLabel();
        imageAccountTwo = new javax.swing.JLabel();

        setName("Help"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        panelTools.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        btnBack.setBackground(new java.awt.Color(0, 153, 153));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        panelTools.add(btnBack);

        add(panelTools, java.awt.BorderLayout.PAGE_START);

        panelLogon.setLayout(new java.awt.BorderLayout());

        panelLogIn.setLayout(new java.awt.BorderLayout());

        panelAA.setLayout(new java.awt.GridBagLayout());

        textPaneAA.setEditable(false);
        textPaneAA.setColumns(20);
        textPaneAA.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneAA.setLineWrap(true);
        textPaneAA.setRows(5);
        textPaneAA.setText("Logging into the system requires two steps.\n\nStep 1: Enter your username.\n- Username is not case sensitive\n\nStep 2: Enter your password.\n- Password is case sensitive\n\nWhat do I do if I forgot my password???\n- Instructions can be found in the resetting password tab");
        textPaneAA.setWrapStyleWord(true);
        innerSrollPaneAA.setViewportView(textPaneAA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelAA.add(innerSrollPaneAA, gridBagConstraints);

        imageLoginOne.setToolTipText("");
        imageLoginOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelAA.add(imageLoginOne, gridBagConstraints);

        scrollPaneAA.setViewportView(panelAA);

        panelLogIn.add(scrollPaneAA, java.awt.BorderLayout.CENTER);

        tabbedLogon.addTab("Logging In", panelLogIn);

        panelResettingPassword.setLayout(new java.awt.BorderLayout());

        panelAB.setLayout(new java.awt.GridBagLayout());

        textPaneAB.setEditable(false);
        textPaneAB.setColumns(20);
        textPaneAB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneAB.setLineWrap(true);
        textPaneAB.setRows(5);
        textPaneAB.setText("Here are the instructions to reset your password.\n\n1. Go to Login Page and select forgot password\n\n\n2. Enter the username for the account you forgot the password to. (Not case sensitive)\n\n\n3. Answer all 3 security questions correctly. (Not case sensitive)\n\n\n4. Create a new password. It must be 8-20 characters and have 3 options completed.\n- (Required) Must be between 8-20 characters\n- (Option) Must have uppercase character\n- (Option) Must have lowercase character\n- (Option) Must have digit character\n- (Option) Must have special character ()!@#$%^&*\n\n\nIf you cannot answer the 3 security questions, you cannot reset your password. Contact an admin.");
        textPaneAB.setWrapStyleWord(true);
        innerScrollPaneAB.setViewportView(textPaneAB);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelAB.add(innerScrollPaneAB, gridBagConstraints);

        imageResetOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelAB.add(imageResetOne, gridBagConstraints);

        imageResetTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelAB.add(imageResetTwo, gridBagConstraints);

        imageResetThree.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelAB.add(imageResetThree, gridBagConstraints);

        imageResetFour.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelAB.add(imageResetFour, gridBagConstraints);

        scrollPaneAB.setViewportView(panelAB);

        panelResettingPassword.add(scrollPaneAB, java.awt.BorderLayout.CENTER);

        tabbedLogon.addTab("Resetting Password", panelResettingPassword);

        panelCreatingAccount.setLayout(new java.awt.BorderLayout());

        panelAC.setLayout(new java.awt.GridBagLayout());

        textPaneAC.setEditable(false);
        textPaneAC.setColumns(20);
        textPaneAC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneAC.setLineWrap(true);
        textPaneAC.setRows(5);
        textPaneAC.setText("Here are the instructions to create an account\n\nFill out the form, make sure all red fields marked with * are completed.\n\nRequired Fields:\n- Username\n- Security Question Answers 1-3\"\n- First & Last Name\n- Address title\n- City\n- State\n- Zipcode\n\nUsername and Password Requirements:\n\nUsername\n- Cannot start with a number (0-9)\n- Cannot have any special/empty characters (Spaces included)\n- Must be a length of 8-20 characters\n- All letters (a-z) are allowed\n\nPassword\nIt must be 8-20 characters and have 3 options completed.\n- (Required) Must be between 8-20 characters    \n- (Option) Must have uppercase character\n- (Option) Must have lowercase character\n- (Option) Must have digit character\n- (Option) Must have special character ()!@#$%^&*\n- (Option) Must have special character ()!@#$%^&*");
        textPaneAC.setWrapStyleWord(true);
        innerScrollPaneAC.setViewportView(textPaneAC);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelAC.add(innerScrollPaneAC, gridBagConstraints);

        imageCreateOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelAC.add(imageCreateOne, gridBagConstraints);

        imageCreateTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelAC.add(imageCreateTwo, gridBagConstraints);

        imageCreateThree.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelAC.add(imageCreateThree, gridBagConstraints);

        scrollPaneAC.setViewportView(panelAC);

        panelCreatingAccount.add(scrollPaneAC, java.awt.BorderLayout.CENTER);

        tabbedLogon.addTab("Creating Account", panelCreatingAccount);

        panelLogon.add(tabbedLogon, java.awt.BorderLayout.CENTER);

        tabbedMain.addTab("Logon View", panelLogon);

        panelCustomer.setLayout(new java.awt.BorderLayout());

        panelBrowsing.setLayout(new java.awt.BorderLayout());

        panelBA.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelBA.setLayout(new java.awt.GridBagLayout());

        textPaneSectionOneBA.setEditable(false);
        textPaneSectionOneBA.setColumns(20);
        textPaneSectionOneBA.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneSectionOneBA.setLineWrap(true);
        textPaneSectionOneBA.setRows(5);
        textPaneSectionOneBA.setText("As a \"Customer\" and \"Guest\", you have access to browse:\n\nGetting Started:\nAt the top of the page, you will see a toolbar. This tool bar will give you the ability to search for and filter for products. Use the comboboxes to query for different categories and filter by different properties. Use the searchbar to search for keywords or a specific item name. The search icon will essentially refresh browsing pane with all of your filters applied. Pressing enter while in the search bar will yield the same result as clicking the search button");
        textPaneSectionOneBA.setWrapStyleWord(true);
        scrollSectionOneBA.setViewportView(textPaneSectionOneBA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelBA.add(scrollSectionOneBA, gridBagConstraints);

        textPaneSectionTwoBA.setEditable(false);
        textPaneSectionTwoBA.setColumns(20);
        textPaneSectionTwoBA.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneSectionTwoBA.setLineWrap(true);
        textPaneSectionTwoBA.setRows(5);
        textPaneSectionTwoBA.setText("Categories Dropdown -\nClicking this dropdown will prompt you with all available categories. Selecting one will refresh the browser panel and display all the items that fall under the category you selected.\n");
        textPaneSectionTwoBA.setWrapStyleWord(true);
        scrollSectionTwoBA.setViewportView(textPaneSectionTwoBA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelBA.add(scrollSectionTwoBA, gridBagConstraints);

        textPaneSectionThreeBA.setEditable(false);
        textPaneSectionThreeBA.setColumns(20);
        textPaneSectionThreeBA.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneSectionThreeBA.setLineWrap(true);
        textPaneSectionThreeBA.setRows(5);
        textPaneSectionThreeBA.setText("Sort by Dropdown -\nClicking this dropdown will prompt you with all available sort by methods. Selecting one will filter your results and display based on what you sorted by.\n");
        textPaneSectionThreeBA.setWrapStyleWord(true);
        scrollSectionThreeBA.setViewportView(textPaneSectionThreeBA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelBA.add(scrollSectionThreeBA, gridBagConstraints);

        textPaneSectionFourBA.setEditable(false);
        textPaneSectionFourBA.setColumns(20);
        textPaneSectionFourBA.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneSectionFourBA.setLineWrap(true);
        textPaneSectionFourBA.setRows(5);
        textPaneSectionFourBA.setText("Search Bar -\nThe search bar will allow you to search for key words, partial names, and full names of items in stock. While in the search bar, you can press enter which starts the query and will refresh your browsing panel. The search button will do the samething as well.\n");
        textPaneSectionFourBA.setWrapStyleWord(true);
        scrollSectionFourBA.setViewportView(textPaneSectionFourBA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelBA.add(scrollSectionFourBA, gridBagConstraints);

        textPaneSectionFiveBA.setEditable(false);
        textPaneSectionFiveBA.setColumns(20);
        textPaneSectionFiveBA.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneSectionFiveBA.setLineWrap(true);
        textPaneSectionFiveBA.setRows(5);
        textPaneSectionFiveBA.setText("Next/Previous Page Button -\nThese buttons will allow you to load more products.");
        textPaneSectionFiveBA.setWrapStyleWord(true);
        scrollSectionFiveBA.setViewportView(textPaneSectionFiveBA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelBA.add(scrollSectionFiveBA, gridBagConstraints);

        imageBrowseOne.setToolTipText("");
        imageBrowseOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBA.add(imageBrowseOne, gridBagConstraints);

        imageBrowseTwo.setToolTipText("");
        imageBrowseTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBA.add(imageBrowseTwo, gridBagConstraints);

        imageBrowseThree.setToolTipText("");
        imageBrowseThree.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBA.add(imageBrowseThree, gridBagConstraints);

        imageBrowseFour.setToolTipText("");
        imageBrowseFour.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBA.add(imageBrowseFour, gridBagConstraints);

        imageBrowseFive.setToolTipText("");
        imageBrowseFive.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBA.add(imageBrowseFive, gridBagConstraints);

        imageBrowseSix.setToolTipText("");
        imageBrowseSix.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBA.add(imageBrowseSix, gridBagConstraints);

        scrollPaneBA.setViewportView(panelBA);

        panelBrowsing.add(scrollPaneBA, java.awt.BorderLayout.CENTER);

        tabbedCustomer.addTab("Browsing", panelBrowsing);

        panelShopping.setLayout(new java.awt.BorderLayout());

        panelBB.setLayout(new java.awt.GridBagLayout());

        textPaneSectionOneBB.setEditable(false);
        textPaneSectionOneBB.setColumns(20);
        textPaneSectionOneBB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneSectionOneBB.setLineWrap(true);
        textPaneSectionOneBB.setRows(5);
        textPaneSectionOneBB.setText("As a \"Customer\" you will have access to shop:\n\nGetting Started:\nTo start shopping is very simple. On the browsing pane, locate a product you like and select the product. Once You have seleted the product, you will be brought to a details page. Here you can view the products price, description, as well as be able to select a quantity to add to the cart. Clicking the \"Add to Cart\" button will bring you back to the main page and open your cart. Clicking back will simply return you to the main page.\n");
        textPaneSectionOneBB.setWrapStyleWord(true);
        scrollSectionOneBB.setViewportView(textPaneSectionOneBB);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelBB.add(scrollSectionOneBB, gridBagConstraints);

        textPaneSectionTwoBB.setEditable(false);
        textPaneSectionTwoBB.setColumns(20);
        textPaneSectionTwoBB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneSectionTwoBB.setLineWrap(true);
        textPaneSectionTwoBB.setRows(5);
        textPaneSectionTwoBB.setText("Shopping Cart:\nThe shopping cart toggle will be on the toolbar mentioned earlier along with search features. Clicking this cart button will allow you to show and hide your cart. There will be a divider in the middle of the browsing panel and cart panel which can be resized. The cart has 4 core actions:\n\nCart Button - Will hide/unhide your cart as well as display the total amount of items in your cart. The cart can be used when browsing as well. (NOTE: The number represents ONE of each item you place in your cart).\n");
        textPaneSectionTwoBB.setWrapStyleWord(true);
        scrollSectionTwoBB.setViewportView(textPaneSectionTwoBB);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelBB.add(scrollSectionTwoBB, gridBagConstraints);

        textPaneSectionThreeBB.setEditable(false);
        textPaneSectionThreeBB.setColumns(20);
        textPaneSectionThreeBB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneSectionThreeBB.setLineWrap(true);
        textPaneSectionThreeBB.setRows(5);
        textPaneSectionThreeBB.setText("Edit/Remove Item - You will see that each item in your cart has 3 different options. These three options include a combobox for quantity, update button, and a remove button. Change the quantity of your item and the update button will become available. (NOTE: The product will only be updated if the update button is pressed). The remove button does as it says, it will remove that item from your cart.\n\nClear Cart - Removes all items from your cart. (Note: this action cannot be undone)");
        textPaneSectionThreeBB.setWrapStyleWord(true);
        scrollSectionThreeBB.setViewportView(textPaneSectionThreeBB);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelBB.add(scrollSectionThreeBB, gridBagConstraints);

        textPaneSectionFourBB.setEditable(false);
        textPaneSectionFourBB.setColumns(20);
        textPaneSectionFourBB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneSectionFourBB.setLineWrap(true);
        textPaneSectionFourBB.setRows(5);
        textPaneSectionFourBB.setText("Expand Cart - Will expand the cart to fullscreen mode. This is useful when trying to get a better look at your cart.\n\nCheckout - Will take all your items to checkout. (Note: you must have at least one item in the cart)");
        textPaneSectionFourBB.setWrapStyleWord(true);
        scrollSectionFourBB.setViewportView(textPaneSectionFourBB);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelBB.add(scrollSectionFourBB, gridBagConstraints);

        imageShopOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBB.add(imageShopOne, gridBagConstraints);

        imageShopTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBB.add(imageShopTwo, gridBagConstraints);

        imageShopThree.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBB.add(imageShopThree, gridBagConstraints);

        imageShopFour.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBB.add(imageShopFour, gridBagConstraints);

        imageShopFive.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBB.add(imageShopFive, gridBagConstraints);

        scrollPaneBB.setViewportView(panelBB);

        panelShopping.add(scrollPaneBB, java.awt.BorderLayout.CENTER);

        tabbedCustomer.addTab("Shopping", panelShopping);

        panelCheckout.setLayout(new java.awt.BorderLayout());

        panelBC.setLayout(new java.awt.GridBagLayout());

        textPaneBC.setEditable(false);
        textPaneBC.setColumns(20);
        textPaneBC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneBC.setLineWrap(true);
        textPaneBC.setRows(5);
        textPaneBC.setText("As a \"Customer\" you have access to checkout.\n\nGetting Started:\nThe checkout is the final stage once you have selected all your desired items. On this screen you can go back to shopping by using the \"Back\" button. The left pane will contain all your cart information along with a calculated subtotal, tax, and grand total. The right panel will have a form to enter your payment information as well as promo codes.\n\nPayment Information:\n\nCardholder Name -\nEnter a valid name in this field to continue. Some examples of valid names include (\"John Doe\", \"Michael Jackson\", \"Jane Doe\").\n\nCard Number -\nEnter a valid name in this field to continue. The number must follow the format of ####-####-####-#### (Dashes included). Some examples of valid examples include (\"1234-1234-1234-1234\", \"1111-1111-1111-1111\").\n\nExpiration Date -\nEnter a valid expiration date in this field to continue. This field will take 2 different formats which include (\"MM/yy\" and \"MM/yyyy\"). Some examples of valid examples include (\"08/24\", \"08/2024\", \"12/2025\"). Of course these vary on the current year and time. The oldest expiration date that will be excepted is 5 years below the current year. For example, if the year is 2024, the oldest expiration that will be valid is 01/19 or 01/2019.\n\nCCV -\nEnter a valid CCV in this field to continue. This field takes only digits (0-9). Some examples of valid CCVS include (\"123\", \"321\").\n\nPromo Codes -\nTo apply a promo code to your order, enter the \"Promo Code\" field with the code and press \"Apply\". After apply is clicked, you will see the reflected results under the promo code field. If the text is green, it was succesful and will display what the code offers below. To the left, you will also see your update total. If it was red, the code was not valid. If it is orange, the code is valid but cannot be applied due to your order not having the correct items.\n\nComplete Order-\nOnce all payment information has been completed, this option will become available. When clicked, your order will be processed and a receipt will be generated for you. This action cannot be undone. The receipt will be opend in your browser's window in a new tab. The location of the receipt will be in your systems C drive. Here is the path (\"C:\\Users\\(YOUR USERNAME)\\Documents\\BeatBOX_Receipts). A notification will also be displayed notifiying that your order has been placed.\n");
        textPaneBC.setWrapStyleWord(true);
        innerScrollPaneBC.setViewportView(textPaneBC);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelBC.add(innerScrollPaneBC, gridBagConstraints);

        imageCheckoutOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBC.add(imageCheckoutOne, gridBagConstraints);

        imageCheckoutTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBC.add(imageCheckoutTwo, gridBagConstraints);

        imageCheckoutThree.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBC.add(imageCheckoutThree, gridBagConstraints);

        imageCheckoutFour.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelBC.add(imageCheckoutFour, gridBagConstraints);

        scrollPaneBC.setViewportView(panelBC);

        panelCheckout.add(scrollPaneBC, java.awt.BorderLayout.CENTER);

        tabbedCustomer.addTab("Checkout", panelCheckout);

        panelCustomer.add(tabbedCustomer, java.awt.BorderLayout.CENTER);

        tabbedMain.addTab("Customer View", panelCustomer);

        panelKeyboardNav.setLayout(new java.awt.BorderLayout());

        panelUsingKeyboard.setLayout(new java.awt.BorderLayout());

        panelCA.setLayout(new java.awt.GridBagLayout());

        textPaneSectionOneCA.setEditable(false);
        textPaneSectionOneCA.setColumns(20);
        textPaneSectionOneCA.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneSectionOneCA.setLineWrap(true);
        textPaneSectionOneCA.setRows(5);
        textPaneSectionOneCA.setText("Using Keys to Navigate:\n\nGetting Started:\nHere are the keys you will need to know:\n- TAB (basic movement)\n- SHIFT (basic movement)\n- ARROW KEYS (basic movement)\n- ENTER (selection)\n- ALT (complex movement)\n- SPACE (optional)\n\nBasic Movement:\nTAB, SHIFT, ARROW -\nThe main key that will be used for keyboard navigation is the TAB key. This key can be used to cycle through a panels buttons, fields, and more. When loading a new view such as the customer view for example, simply press the TAB key to start navigating. You will notice that buttons will become brighter in color, this is how you know you've activated keyboard controls. Simply keep pressing TAB to cycle through all your options. To cycle the opposite direction, hold the SHIFT button while pressing the TAB key. When in some scroll windows and tabbed windows (windows that have tabs, like this help window), You will be able to use the ARROW keys to move between components. Use all these keys in combination to get the best experience.\n\nSelection:\nENTER & SPACE -\nThe main key that will be used for selection is the ENTER key. This key can be used to select, toggle, and enter in certain fields. When you're ready to select an option, press the ENTER key to perform the desired action. The SPACE key will yield similar results to the ENTER on some buttons like the \"Cart Button\", \"Expand/Minimize Cart\", \"View Password Button\".\n\nComplex Movement:\nALT -\nWhen using navigation methods as mentioned previously, you might run into some issues with where you want to navigate to. To fix this issue, you can hold ALT and press TAB. What this does is allows you to transfer from one box (panel) to another. If you have this issue, try ALT + TAB.\n");
        textPaneSectionOneCA.setWrapStyleWord(true);
        scrollSectionOneCA.setViewportView(textPaneSectionOneCA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelCA.add(scrollSectionOneCA, gridBagConstraints);

        scrollPaneCA.setViewportView(panelCA);

        panelUsingKeyboard.add(scrollPaneCA, java.awt.BorderLayout.CENTER);

        tabbedNavigation.addTab("Using Your Keyboard", panelUsingKeyboard);

        panelKeyboardNav.add(tabbedNavigation, java.awt.BorderLayout.CENTER);

        tabbedMain.addTab("Keyboard Navigation", panelKeyboardNav);

        panelManager.setLayout(new java.awt.BorderLayout());

        panelPOS.setLayout(new java.awt.BorderLayout());

        panelDA.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelDA.setLayout(new java.awt.GridBagLayout());

        textPaneSectionOneDA.setEditable(false);
        textPaneSectionOneDA.setColumns(20);
        textPaneSectionOneDA.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneSectionOneDA.setLineWrap(true);
        textPaneSectionOneDA.setRows(5);
        textPaneSectionOneDA.setText("As a \"Employee\" and \"Manager\", you have access to the sales tab:\n\nGetting Started:\nBegin by selecting a customer in the designated combo box in the top right corner. Here is where you can alternate and switch between a the desired customer.");
        textPaneSectionOneDA.setWrapStyleWord(true);
        scrollSectionOneDA.setViewportView(textPaneSectionOneDA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelDA.add(scrollSectionOneDA, gridBagConstraints);

        textPaneSectionTwoDA.setEditable(false);
        textPaneSectionTwoDA.setColumns(20);
        textPaneSectionTwoDA.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneSectionTwoDA.setLineWrap(true);
        textPaneSectionTwoDA.setRows(5);
        textPaneSectionTwoDA.setText("Shopping For Customer -\nOnce a customer has been selected you will gain access to the POS interface. This is essentially an embeded version of the customer view, however, you can freely switch between the customer that is being shopped for. For more information on how to use this panel, locate the Customer View tab for more.");
        textPaneSectionTwoDA.setWrapStyleWord(true);
        scrollSectionTwoDA.setViewportView(textPaneSectionTwoDA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelDA.add(scrollSectionTwoDA, gridBagConstraints);

        imageSalesOne.setToolTipText("");
        imageSalesOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDA.add(imageSalesOne, gridBagConstraints);

        imageSalesTwo.setToolTipText("");
        imageSalesTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDA.add(imageSalesTwo, gridBagConstraints);

        scrollPaneDA.setViewportView(panelDA);

        panelPOS.add(scrollPaneDA, java.awt.BorderLayout.CENTER);

        tabbedManager.addTab("Sales (POS)", panelPOS);

        panelInventory.setLayout(new java.awt.BorderLayout());

        panelDB.setLayout(new java.awt.GridBagLayout());

        textPaneSectionOneDB.setEditable(false);
        textPaneSectionOneDB.setColumns(20);
        textPaneSectionOneDB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneSectionOneDB.setLineWrap(true);
        textPaneSectionOneDB.setRows(5);
        textPaneSectionOneDB.setText("As a \"Employee\" and \"Manager\" you will have access to the inventory tab:\n\nGetting Started:\nWhen opening up the inventory tab, you will shown an interface with all the available inventory at the moment. This is the management tab, if you look at the red box, you will see that you have two tabs, \"Manage Inventory\" and \"Create Items\". This is the basic navigation for the Inventory Tab. \n\nManage Inventory:\n\nInventory:\nWhile on the \"Manage Inventory\" tab, you will be able to manage all available products. The left panel as shown in the red box is where these items can be located. If you need help locating an item, use the search toolbar above which includes two filters and a search bar.\n\nSelecting items:\nOnce you have found an item to edit, simply click the row it is located on as shown in the yellow box.\n\nEdit/Remove Selected Item - Once an item has been selected, two options will become available. If you want to delete the selected item, simply press the \"Delete Selected\" button to delete it. If you want to edit the item, press edit item. These options can be seen in the yellow box in the Inventory panel. \n\nEdit Panel:\nIf the \"Edit Item\" button has been clicked, the edit panel becomes available. This panel can be found in the yellow box in the image. In this panel, you can edit the product to your liking. Once all desired updates are made, update it with the update button. You can also delete that specific item your editing with the delete item button. Images can also be added with the the cyan button located right under the image. If you don't like an image that you have selected, press the undo button to undo your work.\n\nField Requirements:\nItem Name - Must contain at least one(1) character\nRetail Price - Must be a decimal value. Ex: (10.99)\nCost - Must be a decimal value. Ex: (10.99)\nCategory - none\nQuantity - Must be whole number. Ex: (1, 2, 3, 4)\nDescription - Must contain at least one(1) character.\n\nCreate Item:\nThis is very similar to the edit panel located right above this segement. Fill out all the fields following these validation requirements:\n\nItem Name - Must contain at least one(1) character\nRetail Price - Must be a decimal value. Ex: (10.99)\nCost - Must be a decimal value. Ex: (10.99)\nCategory - none\nQuantity - Must be whole number. Ex: (1, 2, 3, 4)\nDescription - Must contain at least one(1) character.\n");
        textPaneSectionOneDB.setWrapStyleWord(true);
        scrollSectionOneDB.setViewportView(textPaneSectionOneDB);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelDB.add(scrollSectionOneDB, gridBagConstraints);

        imageInventoryOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDB.add(imageInventoryOne, gridBagConstraints);

        imageInventoryTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDB.add(imageInventoryTwo, gridBagConstraints);

        imageInventoryThree.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDB.add(imageInventoryThree, gridBagConstraints);

        imageInventoryFour.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDB.add(imageInventoryFour, gridBagConstraints);

        scrollPaneDB.setViewportView(panelDB);

        panelInventory.add(scrollPaneDB, java.awt.BorderLayout.CENTER);

        tabbedManager.addTab("Inventory", panelInventory);

        panelReports.setLayout(new java.awt.BorderLayout());

        panelDC.setLayout(new java.awt.GridBagLayout());

        textPaneDC.setEditable(false);
        textPaneDC.setColumns(20);
        textPaneDC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneDC.setLineWrap(true);
        textPaneDC.setRows(5);
        textPaneDC.setText("As a \"Employee\" and \"Manager\" you have access to reports:\n\nGetting started:\nUnder the reports tab, you will find the reports panel. Here you can navigate between Sales, Acount, and Inventory reports using the top cyan buttons. The report overview will show some details about each report before it is generated. All generated reports will be found in the users documents folder under the name \"BeatBoxPOS_Reports\".\n\nSales Report:\nTo generate a sales report follow these steps:\n1. Select a customer or all using the \"Select Customer\" box.\n2. Select a Date Range for your report using the date boxes.\n2A. The orange buttons can be used to quickly select today, this week, or the entire years date quickly.\n3. Generate Report by clicking the \"Generate Report\" Button.\n\nIf the button is still greyed out after selecting all desired filters, this means that no records were found.\n\nAccount Report:\nTo generate an account report follow these steps:\n1. Select only one of the following (Customer, Manager, Employee)\n2. Once one person has been selected, you can generate the information about them using the \"Generate Report Button\"\n\nInventory Report:\nTo generate an inventory report follow these steps:\n1. Click the \"Generate Report Button\"\n\nThis tab will give you a full report on you inventory at the given moment. In the report all \"Yellow\" rows are items that 5 items away from becoming out of stock, so just a warning. \"Red\" rows are items that have fallen below their restock threshold. Down below you can find useful information about your inventory.\n\n\n\n");
        textPaneDC.setWrapStyleWord(true);
        innerScrollPaneDC.setViewportView(textPaneDC);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelDC.add(innerScrollPaneDC, gridBagConstraints);

        imageReportsOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDC.add(imageReportsOne, gridBagConstraints);

        imageReportsTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDC.add(imageReportsTwo, gridBagConstraints);

        imageReportsThree.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDC.add(imageReportsThree, gridBagConstraints);

        imageReportsFour.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDC.add(imageReportsFour, gridBagConstraints);

        scrollPaneDC.setViewportView(panelDC);

        panelReports.add(scrollPaneDC, java.awt.BorderLayout.CENTER);

        tabbedManager.addTab("Reports", panelReports);

        panelUsers.setLayout(new java.awt.BorderLayout());

        panelDD.setLayout(new java.awt.GridBagLayout());

        textPaneBC2.setEditable(false);
        textPaneBC2.setColumns(20);
        textPaneBC2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneBC2.setLineWrap(true);
        textPaneBC2.setRows(5);
        textPaneBC2.setText("As a \"Manager\" and \"Employee\" you will have access to the users tab.\n\nGetting Started:\nWhen opening up the users tab, you will shown an interface with all the available users at the moment (This exludes you). This is the management tab, if you look at the red box, you will see that you have two tabs, \"Manage users\" and \"Create users\". This is the basic navigation for the Users Tab.\n\nManage Users:\n\nUsers:\nWhile on the \"Manage Users\" tab, you will be able to manage all available users. The left panel as shown in the red box is where these items can be located. If you need help locating an item, use the search toolbar above which includes two filters and a search bar.\n\nSelecting users:\nOnce you have found an item to edit, simply click the row it is located on as shown in the yellow box.\n\nEdit/Remove Selected User - Once User has been selected, two options will become available. If you want to delete the selected User, simply press the \"Delete Selected\" button to delete it. If you want to edit the User, press edit User. These options can be seen in the yellow box in the Inventory panel. \n\nCreate User:\nThis is very similar to the edit panel located right above this segement. Fill out all the fields following these validation requirements:\n\n\nField Requirements:\nHere are the instructions to fill out the form\n\nFill out the form, make sure all red fields marked with * are completed.\n\nRequired Fields:\n- Username\n- First & Last Name\n- Address title\n- City\n- State\n- Zipcode\n\nUsername Requirements:\n\nUsername\n- Cannot start with a number (0-9)\n- Cannot have any special/empty characters (Spaces included)\n- Must be a length of 8-20 characters\n- All letters (a-z) are allowed\n");
        textPaneBC2.setWrapStyleWord(true);
        innerScrollPaneDD.setViewportView(textPaneBC2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelDD.add(innerScrollPaneDD, gridBagConstraints);

        imageUsersOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDD.add(imageUsersOne, gridBagConstraints);

        imageUsersTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDD.add(imageUsersTwo, gridBagConstraints);

        imageUsersThree.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDD.add(imageUsersThree, gridBagConstraints);

        scrollPaneDD.setViewportView(panelDD);

        panelUsers.add(scrollPaneDD, java.awt.BorderLayout.CENTER);

        tabbedManager.addTab("Users", panelUsers);

        panelPromos.setLayout(new java.awt.BorderLayout());

        panelDE.setLayout(new java.awt.GridBagLayout());

        textPaneDE.setEditable(false);
        textPaneDE.setColumns(20);
        textPaneDE.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneDE.setLineWrap(true);
        textPaneDE.setRows(5);
        textPaneDE.setText("As a \"Manager\" and \"Employee\" you will have access to the Promos tab.\n\nGetting Started:\nWhen opening up the Promos tab, you will shown an interface with all the available Promos. This is the management tab, if you look at the red box, you will see that you have two tabs, \"Manage Promos\" and \"Create Promos\". This is the basic navigation for the Promos Tab.\n\nManage Promos:\n\nPromos:\nWhile on the \"Manage Promos\" tab, you will be able to manage all available Promos. The left panel as shown in the red box is where these items can be located. If you need help locating an item, use the search toolbar above which includes two filters and a search bar.\n\nSelecting Promos:\nOnce you have found an item to edit, simply click the row it is located on as shown in the yellow box.\n\nEdit/Remove Selected Promos - Once a Promo has been selected, two options will become available. If you want to delete the selected Promo, simply press the \"Delete Selected\" button to delete it. If you want to edit the Promo, press edit Promo. These options can be seen in the yellow box in the Inventory panel.\n\nCreate Promos:\nThis is very similar to the edit panel located right above this segement. Fill out all the fields following these validation requirements:\n\n\nField Requirements:\nCode Name - Must contain one(1) character\nLevel - (1) Item Specific, (2) Whole Order\nType - (1) Percentage, (2) Dollar Amount\nTarget Item - (Level 1 must be selected) Target item\nAmount - (Varies on type selected) Whole number or decimal\nDescription - Must contian one(1) character\nStart Date (Optional) - Can be disabled, Selected Date\nExpiration date (Required) - Selected Date\n\n\n");
        textPaneDE.setWrapStyleWord(true);
        innerScrollPaneDE.setViewportView(textPaneDE);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelDE.add(innerScrollPaneDE, gridBagConstraints);

        imagePromosOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDE.add(imagePromosOne, gridBagConstraints);

        imagePromosTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDE.add(imagePromosTwo, gridBagConstraints);

        imagePromosThree.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDE.add(imagePromosThree, gridBagConstraints);

        imagePromosFour.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDE.add(imagePromosFour, gridBagConstraints);

        scrollPaneDE.setViewportView(panelDE);

        panelPromos.add(scrollPaneDE, java.awt.BorderLayout.CENTER);

        tabbedManager.addTab("Promos", panelPromos);

        panelAccount.setLayout(new java.awt.BorderLayout());

        panelDF.setLayout(new java.awt.GridBagLayout());

        textPaneDF.setEditable(false);
        textPaneDF.setColumns(20);
        textPaneDF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textPaneDF.setLineWrap(true);
        textPaneDF.setRows(5);
        textPaneDF.setText("As a \"Manager\" and \"Employee\" you will have access to the Account and Notifications tab.\n\nGetting Started:\nThe account tab will provide you access to edit your (you the current user)'s acount. The notifications tab is a side menu that allows you to see all current system notifications, which includes (low stock warnings).\n\nAccount Tab:\n\nField Requirements:\nHere are the instructions to fill out the form\n\nFill out the form, make sure all red fields marked with * are completed.\n\nRequired Fields:\n- Username\n- First & Last Name\n- Address title\n- City\n- State\n- Zipcode\n\nUsername Requirements:\n\nUsername\n- Cannot start with a number (0-9)\n- Cannot have any special/empty characters (Spaces included)\n- Must be a length of 8-20 characters\n- All letters (a-z) are allowed");
        textPaneDF.setWrapStyleWord(true);
        innerScrollPaneDF.setViewportView(textPaneDF);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelDF.add(innerScrollPaneDF, gridBagConstraints);

        imageAccountOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDF.add(imageAccountOne, gridBagConstraints);

        imageAccountTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelDF.add(imageAccountTwo, gridBagConstraints);

        scrollPaneDF.setViewportView(panelDF);

        panelAccount.add(scrollPaneDF, java.awt.BorderLayout.CENTER);

        tabbedManager.addTab("Account", panelAccount);

        panelManager.add(tabbedManager, java.awt.BorderLayout.CENTER);

        tabbedMain.addTab("Manager View", panelManager);

        add(tabbedMain, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:

        panelState.changePanel(panelState.getPreviousPanel());
    }//GEN-LAST:event_btnBackActionPerformed

    private void setImages() {

        Thread imageLoad = new Thread(new Runnable() {
            @Override
            public void run() {
                ImageIcon iconLogonOne = ResourceLoader.getResourceIcon("images/logon/help_login_one.png", ImageManager.SIZE_LARGE);

                ImageIcon iconResetOne = ResourceLoader.getResourceIcon("images/logon/help_reset_one.png", ImageManager.SIZE_LARGE);
                ImageIcon iconResetTwo = ResourceLoader.getResourceIcon("images/logon/help_reset_two.png", ImageManager.SIZE_LARGE);
                ImageIcon iconResetThree = ResourceLoader.getResourceIcon("images/logon/help_reset_three.png", ImageManager.SIZE_LARGE);
                ImageIcon iconResetFour = ResourceLoader.getResourceIcon("images/logon/help_reset_four.png", ImageManager.SIZE_LARGE);

                ImageIcon iconCreateOne = ResourceLoader.getResourceIcon("images/logon/help_create_one.png", ImageManager.SIZE_LARGE);
                ImageIcon iconCreateTwo = ResourceLoader.getResourceIcon("images/logon/help_create_two.png", ImageManager.SIZE_LARGE);
                ImageIcon iconCreateThree = ResourceLoader.getResourceIcon("images/logon/help_create_three.png", ImageManager.SIZE_LARGE);

                ImageIcon iconBrowseOne = ResourceLoader.getResourceIcon("images/customer/help_browse_one.png", ImageManager.SIZE_LARGE);
                ImageIcon iconBrowseTwo = ResourceLoader.getResourceIcon("images/customer/help_browse_two.png", ImageManager.SIZE_LARGE);
                ImageIcon iconBrowseThree = ResourceLoader.getResourceIcon("images/customer/help_browse_three.png", ImageManager.SIZE_LARGE);
                ImageIcon iconBrowseFour = ResourceLoader.getResourceIcon("images/customer/help_browse_four.png", ImageManager.SIZE_LARGE);
                ImageIcon iconBrowseFive = ResourceLoader.getResourceIcon("images/customer/help_browse_five.png", ImageManager.SIZE_LARGE);
                ImageIcon iconBrowseSix = ResourceLoader.getResourceIcon("images/customer/help_browse_six.png", ImageManager.SIZE_LARGE);

                ImageIcon iconShopOne = ResourceLoader.getResourceIcon("images/customer/help_shop_one.png", ImageManager.SIZE_LARGE);
                ImageIcon iconShopTwo = ResourceLoader.getResourceIcon("images/customer/help_shop_two.png", ImageManager.SIZE_LARGE);
                ImageIcon iconShopThree = ResourceLoader.getResourceIcon("images/customer/help_shop_three.png", ImageManager.SIZE_LARGE);
                ImageIcon iconShopFour = ResourceLoader.getResourceIcon("images/customer/help_shop_four.png", ImageManager.SIZE_LARGE);
                ImageIcon iconShopFive = ResourceLoader.getResourceIcon("images/customer/help_shop_five.png", ImageManager.SIZE_LARGE);

                ImageIcon iconCheckoutOne = ResourceLoader.getResourceIcon("images/customer/help_checkout_one.png", ImageManager.SIZE_LARGE);
                ImageIcon iconCheckoutTwo = ResourceLoader.getResourceIcon("images/customer/help_checkout_two.png", ImageManager.SIZE_LARGE);
                ImageIcon iconCheckoutThree = ResourceLoader.getResourceIcon("images/customer/help_checkout_three.png", ImageManager.SIZE_LARGE);
                ImageIcon iconCheckoutFour = ResourceLoader.getResourceIcon("images/customer/help_checkout_four.png", ImageManager.SIZE_LARGE);

                ImageIcon iconSalesOne = ResourceLoader.getResourceIcon("images/manager/Sales/1.png", ImageManager.SIZE_LARGE);
                ImageIcon iconSalesTwo = ResourceLoader.getResourceIcon("images/manager/Sales/2.png", ImageManager.SIZE_LARGE);

                ImageIcon iconInventoryOne = ResourceLoader.getResourceIcon("images/manager/Inventory/1.png", ImageManager.SIZE_LARGE);
                ImageIcon iconInventoryTwo = ResourceLoader.getResourceIcon("images/manager/Inventory/2.png", ImageManager.SIZE_LARGE);
                ImageIcon iconInventoryThree = ResourceLoader.getResourceIcon("images/manager/Inventory/3.png", ImageManager.SIZE_LARGE);
                ImageIcon iconInventoryFour = ResourceLoader.getResourceIcon("images/manager/Inventory/4.png", ImageManager.SIZE_LARGE);

                ImageIcon iconNotificationOne = ResourceLoader.getResourceIcon("images/manager/Notifications/1.png", ImageManager.SIZE_LARGE);
                ImageIcon iconNotificationTwo = ResourceLoader.getResourceIcon("images/manager/Notifications/2.png", ImageManager.SIZE_LARGE);

                ImageIcon iconPromoOne = ResourceLoader.getResourceIcon("images/manager/Promos/1.png", ImageManager.SIZE_LARGE);
                ImageIcon iconPromoTwo = ResourceLoader.getResourceIcon("images/manager/Promos/2.png", ImageManager.SIZE_LARGE);
                ImageIcon iconPromoThree = ResourceLoader.getResourceIcon("images/manager/Promos/3.png", ImageManager.SIZE_LARGE);
                ImageIcon iconPromoFour = ResourceLoader.getResourceIcon("images/manager/Promos/4.png", ImageManager.SIZE_LARGE);

                ImageIcon iconReportOne = ResourceLoader.getResourceIcon("images/manager/Reports/1.png", ImageManager.SIZE_LARGE);
                ImageIcon iconReportTwo = ResourceLoader.getResourceIcon("images/manager/Reports/2.png", ImageManager.SIZE_LARGE);
                ImageIcon iconReportThree = ResourceLoader.getResourceIcon("images/manager/Reports/4.jpeg", ImageManager.SIZE_LARGE);
                ImageIcon iconReportFour = ResourceLoader.getResourceIcon("images/manager/Reports/3.png", ImageManager.SIZE_LARGE);

                ImageIcon iconUserOne = ResourceLoader.getResourceIcon("images/manager/Users/1.png", ImageManager.SIZE_LARGE);
                ImageIcon iconUserTwo = ResourceLoader.getResourceIcon("images/manager/Users/2.png", ImageManager.SIZE_LARGE);
                ImageIcon iconUserThree = ResourceLoader.getResourceIcon("images/manager/Users/3.png", ImageManager.SIZE_LARGE);

                // Loging In
                imageLoginOne.setIcon(iconLogonOne);

                imageResetOne.setIcon(iconResetOne);
                imageResetTwo.setIcon(iconResetTwo);
                imageResetThree.setIcon(iconResetThree);
                imageResetFour.setIcon(iconResetFour);

                imageCreateOne.setIcon(iconCreateOne);
                imageCreateTwo.setIcon(iconCreateTwo);
                imageCreateThree.setIcon(iconCreateThree);

                scrollPaneAA.getVerticalScrollBar().setUnitIncrement(15);
                innerSrollPaneAA.getVerticalScrollBar().setUnitIncrement(15);
                scrollPaneAA.getVerticalScrollBar().setValue(0);
                innerSrollPaneAA.getVerticalScrollBar().setValue(0);

                scrollPaneAB.getVerticalScrollBar().setUnitIncrement(15);
                innerScrollPaneAB.getVerticalScrollBar().setUnitIncrement(15);
                scrollPaneAB.getVerticalScrollBar().setValue(0);
                innerScrollPaneAB.getVerticalScrollBar().setValue(0);

                scrollPaneAC.getVerticalScrollBar().setUnitIncrement(15);
                innerScrollPaneAC.getVerticalScrollBar().setUnitIncrement(15);
                scrollPaneAC.getVerticalScrollBar().setValue(0);
                innerScrollPaneAC.getVerticalScrollBar().setValue(0);

                // Browsing
                imageBrowseOne.setIcon(iconBrowseOne);
                imageBrowseTwo.setIcon(iconBrowseTwo);
                imageBrowseThree.setIcon(iconBrowseThree);
                imageBrowseFour.setIcon(iconBrowseFour);
                imageBrowseFive.setIcon(iconBrowseFive);
                imageBrowseSix.setIcon(iconBrowseSix);

                scrollPaneBA.getVerticalScrollBar().setUnitIncrement(15);
                scrollSectionOneBA.getVerticalScrollBar().setUnitIncrement(15);
                scrollSectionTwoBA.getVerticalScrollBar().setUnitIncrement(15);
                scrollSectionThreeBA.getVerticalScrollBar().setUnitIncrement(15);
                scrollSectionFourBA.getVerticalScrollBar().setUnitIncrement(15);
                scrollSectionFiveBA.getVerticalScrollBar().setUnitIncrement(15);

                scrollPaneBA.getVerticalScrollBar().setValue(0);
                scrollSectionOneBA.getVerticalScrollBar().setValue(0);
                scrollSectionTwoBA.getVerticalScrollBar().setValue(0);
                scrollSectionThreeBA.getVerticalScrollBar().setValue(0);
                scrollSectionFourBA.getVerticalScrollBar().setValue(0);
                scrollSectionFiveBA.getVerticalScrollBar().setValue(0);

                // Shopping
                imageShopOne.setIcon(iconShopOne);
                imageShopTwo.setIcon(iconShopTwo);
                imageShopThree.setIcon(iconShopThree);
                imageShopFour.setIcon(iconShopFour);
                imageShopFive.setIcon(iconShopFive);

                scrollPaneBB.getVerticalScrollBar().setUnitIncrement(15);
                scrollSectionOneBB.getVerticalScrollBar().setUnitIncrement(15);
                scrollSectionTwoBB.getVerticalScrollBar().setUnitIncrement(15);
                scrollSectionThreeBB.getVerticalScrollBar().setUnitIncrement(15);
                scrollSectionFourBB.getVerticalScrollBar().setUnitIncrement(15);

                scrollPaneBB.getVerticalScrollBar().setValue(0);
                scrollSectionOneBB.getVerticalScrollBar().setValue(0);
                scrollSectionTwoBB.getVerticalScrollBar().setValue(0);
                scrollSectionThreeBB.getVerticalScrollBar().setValue(0);
                scrollSectionFourBB.getVerticalScrollBar().setValue(0);

                // Checking out
                imageCheckoutOne.setIcon(iconCheckoutOne);
                imageCheckoutTwo.setIcon(iconCheckoutTwo);
                imageCheckoutThree.setIcon(iconCheckoutThree);
                imageCheckoutFour.setIcon(iconCheckoutFour);

                scrollPaneBC.getVerticalScrollBar().setUnitIncrement(15);
                innerScrollPaneBC.getVerticalScrollBar().setUnitIncrement(15);
                scrollPaneBC.getVerticalScrollBar().setValue(0);
                innerScrollPaneBC.getVerticalScrollBar().setValue(0);

                // Sales Icons
                imageSalesOne.setIcon(iconSalesOne);
                imageSalesTwo.setIcon(iconSalesTwo);

                imageInventoryOne.setIcon(iconInventoryOne);
                imageInventoryTwo.setIcon(iconInventoryTwo);
                imageInventoryThree.setIcon(iconInventoryThree);
                imageInventoryFour.setIcon(iconInventoryFour);

                imageAccountOne.setIcon(iconNotificationOne);
                imageAccountTwo.setIcon(iconNotificationTwo);

                imagePromosOne.setIcon(iconPromoOne);
                imagePromosTwo.setIcon(iconPromoTwo);
                imagePromosThree.setIcon(iconPromoThree);
                imagePromosFour.setIcon(iconPromoFour);

                imageReportsOne.setIcon(iconReportOne);
                imageReportsTwo.setIcon(iconReportTwo);
                imageReportsThree.setIcon(iconReportThree);
                imageReportsFour.setIcon(iconReportFour);

                imageUsersOne.setIcon(iconUserOne);
                imageUsersTwo.setIcon(iconUserTwo);
                imageUsersThree.setIcon(iconUserThree);

                // Manager
                scrollPaneDA.getVerticalScrollBar().setUnitIncrement(15);
                scrollSectionOneDA.getVerticalScrollBar().setUnitIncrement(15);
                scrollSectionTwoDA.getVerticalScrollBar().setUnitIncrement(15);

                scrollPaneDA.getVerticalScrollBar().setValue(0);
                scrollSectionOneDA.getVerticalScrollBar().setValue(0);
                scrollSectionTwoDA.getVerticalScrollBar().setValue(0);

                scrollPaneDB.getVerticalScrollBar().setUnitIncrement(15);
                scrollSectionOneDB.getVerticalScrollBar().setUnitIncrement(15);

                scrollPaneDB.getVerticalScrollBar().setValue(0);
                scrollSectionOneDB.getVerticalScrollBar().setValue(0);

                scrollPaneDC.getVerticalScrollBar().setUnitIncrement(15);
                innerScrollPaneDC.getVerticalScrollBar().setUnitIncrement(15);

                scrollPaneDC.getVerticalScrollBar().setValue(0);
                innerScrollPaneDC.getVerticalScrollBar().setValue(0);

                scrollPaneDD.getVerticalScrollBar().setUnitIncrement(15);
                innerScrollPaneDD.getVerticalScrollBar().setUnitIncrement(15);

                scrollPaneDD.getVerticalScrollBar().setValue(0);
                innerScrollPaneDD.getVerticalScrollBar().setValue(0);

                scrollPaneDE.getVerticalScrollBar().setUnitIncrement(15);
                innerScrollPaneDE.getVerticalScrollBar().setUnitIncrement(15);

                scrollPaneDE.getVerticalScrollBar().setValue(0);
                innerScrollPaneDE.getVerticalScrollBar().setValue(0);

                scrollPaneDF.getVerticalScrollBar().setUnitIncrement(15);
                innerScrollPaneDF.getVerticalScrollBar().setUnitIncrement(15);

                scrollPaneDF.getVerticalScrollBar().setValue(0);
                innerScrollPaneDF.getVerticalScrollBar().setValue(0);
            }
        });

        imageLoad.start();

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel imageAccountOne;
    private javax.swing.JLabel imageAccountTwo;
    private javax.swing.JLabel imageBrowseFive;
    private javax.swing.JLabel imageBrowseFour;
    private javax.swing.JLabel imageBrowseOne;
    private javax.swing.JLabel imageBrowseSix;
    private javax.swing.JLabel imageBrowseThree;
    private javax.swing.JLabel imageBrowseTwo;
    private javax.swing.JLabel imageCheckoutFour;
    private javax.swing.JLabel imageCheckoutOne;
    private javax.swing.JLabel imageCheckoutThree;
    private javax.swing.JLabel imageCheckoutTwo;
    private javax.swing.JLabel imageCreateOne;
    private javax.swing.JLabel imageCreateThree;
    private javax.swing.JLabel imageCreateTwo;
    private javax.swing.JLabel imageInventoryFour;
    private javax.swing.JLabel imageInventoryOne;
    private javax.swing.JLabel imageInventoryThree;
    private javax.swing.JLabel imageInventoryTwo;
    private javax.swing.JLabel imageLoginOne;
    private javax.swing.JLabel imagePromosFour;
    private javax.swing.JLabel imagePromosOne;
    private javax.swing.JLabel imagePromosThree;
    private javax.swing.JLabel imagePromosTwo;
    private javax.swing.JLabel imageReportsFour;
    private javax.swing.JLabel imageReportsOne;
    private javax.swing.JLabel imageReportsThree;
    private javax.swing.JLabel imageReportsTwo;
    private javax.swing.JLabel imageResetFour;
    private javax.swing.JLabel imageResetOne;
    private javax.swing.JLabel imageResetThree;
    private javax.swing.JLabel imageResetTwo;
    private javax.swing.JLabel imageSalesOne;
    private javax.swing.JLabel imageSalesTwo;
    private javax.swing.JLabel imageShopFive;
    private javax.swing.JLabel imageShopFour;
    private javax.swing.JLabel imageShopOne;
    private javax.swing.JLabel imageShopThree;
    private javax.swing.JLabel imageShopTwo;
    private javax.swing.JLabel imageUsersOne;
    private javax.swing.JLabel imageUsersThree;
    private javax.swing.JLabel imageUsersTwo;
    private javax.swing.JScrollPane innerScrollPaneAB;
    private javax.swing.JScrollPane innerScrollPaneAC;
    private javax.swing.JScrollPane innerScrollPaneBC;
    private javax.swing.JScrollPane innerScrollPaneDC;
    private javax.swing.JScrollPane innerScrollPaneDD;
    private javax.swing.JScrollPane innerScrollPaneDE;
    private javax.swing.JScrollPane innerScrollPaneDF;
    private javax.swing.JScrollPane innerSrollPaneAA;
    private javax.swing.JPanel panelAA;
    private javax.swing.JPanel panelAB;
    private javax.swing.JPanel panelAC;
    private javax.swing.JPanel panelAccount;
    private javax.swing.JPanel panelBA;
    private javax.swing.JPanel panelBB;
    private javax.swing.JPanel panelBC;
    private javax.swing.JPanel panelBrowsing;
    private javax.swing.JPanel panelCA;
    private javax.swing.JPanel panelCheckout;
    private javax.swing.JPanel panelCreatingAccount;
    private javax.swing.JPanel panelCustomer;
    private javax.swing.JPanel panelDA;
    private javax.swing.JPanel panelDB;
    private javax.swing.JPanel panelDC;
    private javax.swing.JPanel panelDD;
    private javax.swing.JPanel panelDE;
    private javax.swing.JPanel panelDF;
    private javax.swing.JPanel panelInventory;
    private javax.swing.JPanel panelKeyboardNav;
    private javax.swing.JPanel panelLogIn;
    private javax.swing.JPanel panelLogon;
    private javax.swing.JPanel panelManager;
    private javax.swing.JPanel panelPOS;
    private javax.swing.JPanel panelPromos;
    private javax.swing.JPanel panelReports;
    private javax.swing.JPanel panelResettingPassword;
    private javax.swing.JPanel panelShopping;
    private javax.swing.JPanel panelTools;
    private javax.swing.JPanel panelUsers;
    private javax.swing.JPanel panelUsingKeyboard;
    private javax.swing.JScrollPane scrollPaneAA;
    private javax.swing.JScrollPane scrollPaneAB;
    private javax.swing.JScrollPane scrollPaneAC;
    private javax.swing.JScrollPane scrollPaneBA;
    private javax.swing.JScrollPane scrollPaneBB;
    private javax.swing.JScrollPane scrollPaneBC;
    private javax.swing.JScrollPane scrollPaneCA;
    private javax.swing.JScrollPane scrollPaneDA;
    private javax.swing.JScrollPane scrollPaneDB;
    private javax.swing.JScrollPane scrollPaneDC;
    private javax.swing.JScrollPane scrollPaneDD;
    private javax.swing.JScrollPane scrollPaneDE;
    private javax.swing.JScrollPane scrollPaneDF;
    private javax.swing.JScrollPane scrollSectionFiveBA;
    private javax.swing.JScrollPane scrollSectionFourBA;
    private javax.swing.JScrollPane scrollSectionFourBB;
    private javax.swing.JScrollPane scrollSectionOneBA;
    private javax.swing.JScrollPane scrollSectionOneBB;
    private javax.swing.JScrollPane scrollSectionOneCA;
    private javax.swing.JScrollPane scrollSectionOneDA;
    private javax.swing.JScrollPane scrollSectionOneDB;
    private javax.swing.JScrollPane scrollSectionThreeBA;
    private javax.swing.JScrollPane scrollSectionThreeBB;
    private javax.swing.JScrollPane scrollSectionTwoBA;
    private javax.swing.JScrollPane scrollSectionTwoBB;
    private javax.swing.JScrollPane scrollSectionTwoDA;
    private javax.swing.JTabbedPane tabbedCustomer;
    private javax.swing.JTabbedPane tabbedLogon;
    private javax.swing.JTabbedPane tabbedMain;
    private javax.swing.JTabbedPane tabbedManager;
    private javax.swing.JTabbedPane tabbedNavigation;
    private javax.swing.JTextArea textPaneAA;
    private javax.swing.JTextArea textPaneAB;
    private javax.swing.JTextArea textPaneAC;
    private javax.swing.JTextArea textPaneBC;
    private javax.swing.JTextArea textPaneBC2;
    private javax.swing.JTextArea textPaneDC;
    private javax.swing.JTextArea textPaneDE;
    private javax.swing.JTextArea textPaneDF;
    private javax.swing.JTextArea textPaneSectionFiveBA;
    private javax.swing.JTextArea textPaneSectionFourBA;
    private javax.swing.JTextArea textPaneSectionFourBB;
    private javax.swing.JTextArea textPaneSectionOneBA;
    private javax.swing.JTextArea textPaneSectionOneBB;
    private javax.swing.JTextArea textPaneSectionOneCA;
    private javax.swing.JTextArea textPaneSectionOneDA;
    private javax.swing.JTextArea textPaneSectionOneDB;
    private javax.swing.JTextArea textPaneSectionThreeBA;
    private javax.swing.JTextArea textPaneSectionThreeBB;
    private javax.swing.JTextArea textPaneSectionTwoBA;
    private javax.swing.JTextArea textPaneSectionTwoBB;
    private javax.swing.JTextArea textPaneSectionTwoDA;
    // End of variables declaration//GEN-END:variables
}
